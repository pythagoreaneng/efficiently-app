{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kw/LocalDev/efficiently-app/components/TaskScreen.js\";\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Task from \"./Task\";\n\nvar TaskScreen = function TaskScreen() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      task = _useState2[0],\n      setTask = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      taskItems = _useState4[0],\n      setTaskItems = _useState4[1];\n\n  var handleAddTask = function handleAddTask() {\n    Keyboard.dismiss;\n    setTaskItems([].concat(_toConsumableArray(taskItems), [task]));\n    setTask(null);\n  };\n\n  var completeTask = function completeTask(index) {\n    var itemsCopy = _toConsumableArray(taskItems);\n\n    itemsCopy.splice(index, 1);\n    setTaskItems(itemsCopy);\n  };\n\n  var d = new Date();\n  var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  var dues = [\"3 days ago\", \"2 days ago\", \"Yesterday\", \"Today\", \"Tomorrow\", \"In 2 days\", \"In 3 days\"];\n\n  var nth = function nth(d) {\n    if (d > 3 && d < 21) return \"th\";\n\n    switch (d % 10) {\n      case 1:\n        return \"st\";\n\n      case 2:\n        return \"nd\";\n\n      case 3:\n        return \"rd\";\n\n      default:\n        return \"th\";\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.taskWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.sectionTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, months[d.getMonth()], \" \", d.getDate(), nth(d.getDate())), React.createElement(View, {\n    style: styles.items,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, taskItems.map(function (item, index) {\n    return React.createElement(TouchableOpacity, {\n      key: index,\n      onPress: function onPress() {\n        return completeTask(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, React.createElement(Task, {\n      text: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }));\n  }))), React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: styles.writeTaskWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"#DoEfficiently\",\n    value: task,\n    onChangeText: function onChangeText(text) {\n      return setTask(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleAddTask();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.addWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.addText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"+\")))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#46BCFF\"\n  },\n  items: {\n    marginTop: 30\n  },\n  writeTaskWrapper: {\n    position: \"relative\",\n    bottom: 200,\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    backgroundColor: \"#911\"\n  },\n  input: {\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    backgroundColor: \"#FFF\",\n    borderRadius: 60,\n    borderColor: \"#C0C0C0\",\n    width: 250,\n    borderWidth: 1\n  },\n  taskWrapper: {\n    paddingTop: 20,\n    paddingHorizontal: 20\n  },\n  addWrapper: {\n    width: 60,\n    height: 60,\n    backgroundColor: \"#232323\",\n    borderRadius: 60,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: \"#C0C0C0\",\n    borderWidth: 1,\n    backgroundColor: \"#911\"\n  },\n  addText: {\n    fontSize: 40,\n    color: \"#fff\"\n  }\n});\nexport default TaskScreen;","map":{"version":3,"sources":["/Users/kw/LocalDev/efficiently-app/components/TaskScreen.js"],"names":["React","useState","Task","TaskScreen","task","setTask","taskItems","setTaskItems","handleAddTask","Keyboard","dismiss","completeTask","index","itemsCopy","splice","d","Date","months","dues","nth","styles","container","taskWrapper","sectionTitle","getMonth","getDate","items","map","item","Platform","OS","writeTaskWrapper","input","text","addWrapper","addText","StyleSheet","create","flex","backgroundColor","fontSize","fontWeight","color","marginTop","position","bottom","width","flexDirection","justifyContent","alignItems","paddingVertical","paddingHorizontal","borderRadius","borderColor","borderWidth","paddingTop","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  KeyboardAvoidingView,\n  Platform,\n  TextInput,\n  TouchableOpacity,\n  Keyboard,\n  Button,\n  ScrollView,\n} from \"react-native\";\nimport Task from \"./Task\";\n\nconst TaskScreen = () => {\n  const [task, setTask] = useState();\n  const [taskItems, setTaskItems] = useState([]);\n  const handleAddTask = () => {\n    Keyboard.dismiss;\n    setTaskItems([...taskItems, task]);\n    setTask(null);\n  };\n\n  const completeTask = (index) => {\n    let itemsCopy = [...taskItems];\n    itemsCopy.splice(index, 1);\n    setTaskItems(itemsCopy);\n  };\n\n  let d = new Date();\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  let dues = [\n    \"3 days ago\",\n    \"2 days ago\",\n    \"Yesterday\",\n    \"Today\",\n    \"Tomorrow\",\n    \"In 2 days\",\n    \"In 3 days\",\n  ];\n\n  const nth = (d) => {\n    if (d > 3 && d < 21) return \"th\";\n    switch (d % 10) {\n      case 1:\n        return \"st\";\n      case 2:\n        return \"nd\";\n      case 3:\n        return \"rd\";\n      default:\n        return \"th\";\n    }\n  };\n  return (\n    <View style={styles.container}>\n      <View style={styles.taskWrapper}>\n        <Text style={styles.sectionTitle}>\n          {months[d.getMonth()]} {d.getDate()}\n          {nth(d.getDate())}\n        </Text>\n\n        <View style={styles.items}>\n          {taskItems.map((item, index) => {\n            return (\n              <TouchableOpacity key={index} onPress={() => completeTask(index)}>\n                <Task text={item} />\n              </TouchableOpacity>\n            );\n          })}\n        </View>\n      </View>\n\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        style={styles.writeTaskWrapper}\n      >\n        <TextInput\n          style={styles.input}\n          placeholder={\"#DoEfficiently\"}\n          value={task}\n          onChangeText={(text) => setTask(text)}\n        />\n        <TouchableOpacity onPress={() => handleAddTask()}>\n          <View style={styles.addWrapper}>\n            <Text style={styles.addText}>+</Text>\n          </View>\n        </TouchableOpacity>\n      </KeyboardAvoidingView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#46BCFF\",\n  },\n  items: {\n    marginTop: 30,\n  },\n  writeTaskWrapper: {\n    position: \"relative\",\n    bottom: 200,\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    backgroundColor: \"#911\",\n  },\n  input: {\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    backgroundColor: \"#FFF\",\n    borderRadius: 60,\n    borderColor: \"#C0C0C0\",\n    width: 250,\n    borderWidth: 1,\n  },\n  taskWrapper: {\n    paddingTop: 20,\n    paddingHorizontal: 20,\n  },\n  addWrapper: {\n    width: 60,\n    height: 60,\n    backgroundColor: \"#232323\",\n    borderRadius: 60,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: \"#C0C0C0\",\n    borderWidth: 1,\n    backgroundColor: \"#911\",\n  },\n  addText: {\n    fontSize: 40,\n    color: \"#fff\",\n  },\n});\nexport default TaskScreen;\n"]},"metadata":{},"sourceType":"module"}