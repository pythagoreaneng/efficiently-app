{"ast":null,"code":"import { isToday, isDateNotInTheRange, sameMonth } from \"./dateutils\";\nimport { parseDate, toMarkingFormat } from \"./interface\";\n\nfunction getState(day, current, props) {\n  var minDate = props.minDate,\n      maxDate = props.maxDate,\n      disabledByDefault = props.disabledByDefault,\n      context = props.context;\n\n  var _minDate = parseDate(minDate);\n\n  var _maxDate = parseDate(maxDate);\n\n  var state = '';\n\n  if ((context == null ? void 0 : context.date) === toMarkingFormat(day)) {\n    state = 'selected';\n  } else if (isToday(day)) {\n    state = 'today';\n  }\n\n  if (disabledByDefault) {\n    state = 'disabled';\n  } else if (isDateNotInTheRange(_minDate, _maxDate, day)) {\n    state = 'disabled';\n  } else if (!sameMonth(day, current)) {\n    state = 'disabled';\n  }\n\n  return state;\n}\n\nmodule.exports = {\n  getState: getState\n};","map":{"version":3,"sources":["C:/Users/NASSER/Desktop/efficiently/app/node_modules/react-native-calendars/src/day-state-manager.js"],"names":["isToday","isDateNotInTheRange","sameMonth","parseDate","toMarkingFormat","getState","day","current","props","minDate","maxDate","disabledByDefault","context","_minDate","_maxDate","state","date","module","exports"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,mBAAjB,EAAsCC,SAAtC;AACA,SAAQC,SAAR,EAAmBC,eAAnB;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,OAAvB,EAAgCC,KAAhC,EAAuC;AACrC,MAAOC,OAAP,GAAuDD,KAAvD,CAAOC,OAAP;AAAA,MAAgBC,OAAhB,GAAuDF,KAAvD,CAAgBE,OAAhB;AAAA,MAAyBC,iBAAzB,GAAuDH,KAAvD,CAAyBG,iBAAzB;AAAA,MAA4CC,OAA5C,GAAuDJ,KAAvD,CAA4CI,OAA5C;;AACA,MAAMC,QAAQ,GAAGV,SAAS,CAACM,OAAD,CAA1B;;AACA,MAAMK,QAAQ,GAAGX,SAAS,CAACO,OAAD,CAA1B;;AACA,MAAIK,KAAK,GAAG,EAAZ;;AAEA,MAAI,CAAAH,OAAO,QAAP,YAAAA,OAAO,CAAEI,IAAT,MAAkBZ,eAAe,CAACE,GAAD,CAArC,EAA4C;AAC1CS,IAAAA,KAAK,GAAG,UAAR;AACD,GAFD,MAEO,IAAIf,OAAO,CAACM,GAAD,CAAX,EAAkB;AACvBS,IAAAA,KAAK,GAAG,OAAR;AACD;;AACD,MAAIJ,iBAAJ,EAAuB;AACrBI,IAAAA,KAAK,GAAG,UAAR;AACD,GAFD,MAEO,IAAId,mBAAmB,CAACY,QAAD,EAAWC,QAAX,EAAqBR,GAArB,CAAvB,EAAkD;AACvDS,IAAAA,KAAK,GAAG,UAAR;AACD,GAFM,MAEA,IAAI,CAACb,SAAS,CAACI,GAAD,EAAMC,OAAN,CAAd,EAA8B;AACnCQ,IAAAA,KAAK,GAAG,UAAR;AACD;;AAED,SAAOA,KAAP;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiB;AACfb,EAAAA,QAAQ,EAARA;AADe,CAAjB","sourcesContent":["import {isToday, isDateNotInTheRange, sameMonth} from './dateutils';\nimport {parseDate, toMarkingFormat} from './interface';\n\nfunction getState(day, current, props) {\n  const {minDate, maxDate, disabledByDefault, context} = props;\n  const _minDate = parseDate(minDate);\n  const _maxDate = parseDate(maxDate);\n  let state = '';\n\n  if (context?.date === toMarkingFormat(day)) {\n    state = 'selected';\n  } else if (isToday(day)) {\n    state = 'today';\n  }\n  if (disabledByDefault) {\n    state = 'disabled';\n  } else if (isDateNotInTheRange(_minDate, _maxDate, day)) {\n    state = 'disabled';\n  } else if (!sameMonth(day, current)) {\n    state = 'disabled';\n  }\n\n  return state;\n}\n\nmodule.exports = {\n  getState\n};\n"]},"metadata":{},"sourceType":"module"}