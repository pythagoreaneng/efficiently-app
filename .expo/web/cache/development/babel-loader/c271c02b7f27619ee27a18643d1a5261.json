{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/kw/LocalDev/efficiently-app/App.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Task from \"./components/Task\";\nimport TaskScreen from \"./components/TaskScreen\";\nimport HomeScreen from \"./components/HomeScreen\";\nimport { NavigationContainer, DefaultTheme, DarkTheme } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nvar Stack = createStackNavigator();\nimport SlidingUpPanel from \"rn-sliding-up-panel\";\nimport XDate from \"xdate\";\nimport { useFonts, Inter_900Black } from \"@expo-google-fonts/inter\";\nimport { EvilIcons } from \"@expo/vector-icons\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nexport default function App() {\n  var _this = this;\n\n  var animatedValue = new Animated.Value(10);\n\n  var _Dimensions$get = Dimensions.get(\"window\"),\n      height = _Dimensions$get.height;\n\n  var _useState = useState(todayDate),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showMarkedDatesExamples = _useState4[0],\n      setShowMarkedDatesExamples = _useState4[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    setShowMarkedDatesExamples(!showMarkedDatesExamples);\n  };\n\n  var onDayPress = function onDayPress(day) {\n    setSelected(day.dateString);\n  };\n\n  var getDisabledDates = function getDisabledDates(startDate, endDate, daysToDisable) {\n    var disabledDates = {};\n    var start = XDate(startDate);\n    var end = XDate(endDate);\n\n    for (var m = XDate(start); m.diffDays(end) <= 0; m.addDays(1)) {\n      if (_.includes(daysToDisable, m.weekday())) {\n        disabledDates[m.toString(\"YYYY-MM-DD\")] = {\n          disabled: true\n        };\n      }\n    }\n\n    return disabledDates;\n  };\n\n  var scheme = useColorScheme();\n\n  var TopIcon = function TopIcon(onPress) {\n    return React.createElement(MaterialCommunityIcons, {\n      name: \"drag-horizontal\",\n      size: 24,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var DownLogo = function DownLogo(onPress) {\n    return React.createElement(EvilIcons, {\n      name: \"chevron-down\",\n      size: 24,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 12\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.mainScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.mainTopScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, React.createElement(Calendar, {\n    current: todayDate,\n    onDayPress: onDayPress,\n    markedDates: _defineProperty({}, selected, {\n      selected: true,\n      disableTouchEvent: true,\n      selectedColor: \"#46BCFF\",\n      selectedTextColor: \"#FFFFFF\"\n    }),\n    theme: {\n      textMonthFontFamily: \"Inter_900Black\",\n      textDayFontSize: 15,\n      textMonthFontSize: 20,\n      textDayHeaderFontSize: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })), React.createElement(SlidingUpPanel, {\n    animatedValue: animatedValue,\n    draggableRange: {\n      top: height - 100,\n      bottom: height - 400\n    },\n    snappingPoints: [360],\n    height: height + 180,\n    friction: 0.5,\n    style: styles.panel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationContainer, {\n    theme: scheme === \"dark\" ? DarkTheme : DefaultTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: \"#fafafa\",\n        elevation: 0,\n        shadowOpacity: 0\n      },\n      headerBackTitleVisible: false,\n      shadowColor: \"transparent\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    style: styles.panel,\n    options: {\n      headerTitle: function headerTitle() {\n        return React.createElement(TopIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 36\n          }\n        });\n      },\n      headerBackTitle: null\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Tasks\",\n    component: TaskScreen,\n    options: {\n      headerTitle: function headerTitle() {\n        return React.createElement(TopIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 36\n          }\n        });\n      },\n      headerBackTitle: null\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  })))));\n}\nvar styles = StyleSheet.create({\n  line: {\n    height: 1,\n    backgroundColor: \"#911\"\n  },\n  mainScreen: {\n    flexDirection: \"column\",\n    height: \"100%\"\n  },\n  mainTopScreen: {\n    paddingTop: \"10%\",\n    height: \"40%\"\n  },\n  mainBottomScreen: {\n    paddingTop: \"0.3%\",\n    height: \"65%\",\n    backgroundColor: \"#975\"\n  },\n  panel: {\n    backgroundColor: \"#719\",\n    height: \"100%\"\n  }\n});","map":{"version":3,"sources":["/Users/kw/LocalDev/efficiently-app/App.js"],"names":["React","useState","Task","TaskScreen","HomeScreen","NavigationContainer","DefaultTheme","DarkTheme","createStackNavigator","Calendar","CalendarList","Agenda","Stack","SlidingUpPanel","XDate","useFonts","Inter_900Black","EvilIcons","MaterialCommunityIcons","MaterialIcons","App","animatedValue","Animated","Value","Dimensions","get","height","todayDate","selected","setSelected","showMarkedDatesExamples","setShowMarkedDatesExamples","toggleSwitch","onDayPress","day","dateString","getDisabledDates","startDate","endDate","daysToDisable","disabledDates","start","end","m","diffDays","addDays","_","includes","weekday","toString","disabled","scheme","useColorScheme","TopIcon","onPress","DownLogo","styles","mainScreen","mainTopScreen","disableTouchEvent","selectedColor","selectedTextColor","textMonthFontFamily","textDayFontSize","textMonthFontSize","textDayHeaderFontSize","top","bottom","panel","headerStyle","backgroundColor","elevation","shadowOpacity","headerBackTitleVisible","shadowColor","headerTitle","headerBackTitle","StyleSheet","create","line","flexDirection","paddingTop","mainBottomScreen"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  KeyboardAvoidingView,\n  Platform,\n  TextInput,\n  TouchableOpacity,\n  Keyboard,\n  Button,\n  ScrollView,\n  Animated,\n  Dimensions,\n} from \"react-native\";\nimport Task from \"./components/Task\";\nimport TaskScreen from \"./components/TaskScreen\";\nimport HomeScreen from \"./components/HomeScreen\";\nimport {\n  NavigationContainer,\n  DefaultTheme,\n  DarkTheme,\n} from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\nimport { useColorScheme } from \"react-native\";\nconst Stack = createStackNavigator();\nimport SlidingUpPanel from \"rn-sliding-up-panel\";\nimport XDate from \"xdate\";\nimport { useFonts, Inter_900Black } from \"@expo-google-fonts/inter\";\nimport { EvilIcons } from \"@expo/vector-icons\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\n\nexport default function App() {\n  // sliding-up-panel related\n  const animatedValue = new Animated.Value(10);\n  const { height } = Dimensions.get(\"window\");\n\n  // react-native-calendars related\n  const [selected, setSelected] = useState(todayDate);\n  const [showMarkedDatesExamples, setShowMarkedDatesExamples] = useState(false);\n  const toggleSwitch = () => {\n    setShowMarkedDatesExamples(!showMarkedDatesExamples);\n  };\n\n  const onDayPress = (day) => {\n    setSelected(day.dateString);\n  };\n\n  const getDisabledDates = (startDate, endDate, daysToDisable) => {\n    const disabledDates = {};\n    const start = XDate(startDate);\n    const end = XDate(endDate);\n\n    for (let m = XDate(start); m.diffDays(end) <= 0; m.addDays(1)) {\n      if (_.includes(daysToDisable, m.weekday())) {\n        disabledDates[m.toString(\"YYYY-MM-DD\")] = { disabled: true };\n      }\n    }\n    return disabledDates;\n  };\n\n  // Dark mode(Not implemented yet)\n  const scheme = useColorScheme();\n\n  const TopIcon = (onPress) => {\n    return (\n      <MaterialCommunityIcons name=\"drag-horizontal\" size={24} color=\"black\" />\n    );\n  };\n  const DownLogo = (onPress) => {\n    return <EvilIcons name=\"chevron-down\" size={24} color=\"black\" />;\n  };\n\n  return (\n    <View style={styles.mainScreen}>\n      <View style={styles.mainTopScreen}>\n        <Calendar\n          current={todayDate}\n          onDayPress={onDayPress}\n          markedDates={{\n            [selected]: {\n              selected: true,\n              disableTouchEvent: true,\n              selectedColor: \"#46BCFF\",\n              selectedTextColor: \"#FFFFFF\",\n            },\n          }}\n          theme={{\n            //todayTextColor: \"#46BCFF\",\n            // Inter_100Thin,\n            // Inter_200ExtraLight,\n            // Inter_300Light,\n            // Inter_400Regular,\n            // Inter_500Medium,\n            // Inter_600SemiBold,\n            // Inter_700Bold,\n            // Inter_800ExtraBold,\n            // Inter_900Black,\n            //calendarBackground: \"#911\",\n            //textDayFontFamily: \"Inter_900Black\",\n            textMonthFontFamily: \"Inter_900Black\",\n            //textDayHeaderFontFamily: \"Inter_900Black\",\n            textDayFontSize: 15,\n            textMonthFontSize: 20,\n            textDayHeaderFontSize: 10,\n          }}\n        />\n      </View>\n\n      <SlidingUpPanel\n        animatedValue={animatedValue}\n        draggableRange={{ top: height - 100, bottom: height - 400 }}\n        snappingPoints={[360]}\n        height={height + 180}\n        friction={0.5}\n        style={styles.panel}\n      >\n        <NavigationContainer\n          theme={scheme === \"dark\" ? DarkTheme : DefaultTheme}\n        >\n          <Stack.Navigator\n            initialRouteName=\"Home\"\n            screenOptions={{\n              // headerShown: null,\n              headerStyle: {\n                backgroundColor: \"#fafafa\",\n                // header bottom bar\n                elevation: 0, //ios\n                shadowOpacity: 0, //android\n              },\n              //headerLeft: null,\n              headerBackTitleVisible: false,\n              shadowColor: \"transparent\",\n            }}\n          >\n            <Stack.Screen\n              name=\"Home\"\n              component={HomeScreen}\n              style={styles.panel}\n              options={{\n                headerTitle: () => <TopIcon />,\n                headerBackTitle: null,\n              }}\n            />\n            <Stack.Screen\n              name=\"Tasks\"\n              component={TaskScreen}\n              options={{\n                headerTitle: () => <TopIcon />,\n                headerBackTitle: null,\n              }}\n            />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </SlidingUpPanel>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  line: { height: 1, backgroundColor: \"#911\" },\n  mainScreen: {\n    flexDirection: \"column\",\n    height: \"100%\",\n  },\n\n  mainTopScreen: { paddingTop: \"10%\", height: \"40%\" },\n  mainBottomScreen: {\n    paddingTop: \"0.3%\",\n    height: \"65%\",\n    backgroundColor: \"#975\",\n  },\n  panel: {\n    backgroundColor: \"#719\",\n    height: \"100%\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}