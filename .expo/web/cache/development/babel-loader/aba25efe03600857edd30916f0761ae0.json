{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/kw/LocalDev/efficiently-app/App.js\";\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Task from \"./components/Task\";\nimport TaskScreen from \"./components/TaskScreen\";\nimport HomeScreen from \"./components/HomeScreen\";\nimport { NavigationContainer, DefaultTheme, DarkTheme } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\n\nvar CalendarScreen = function CalendarScreen() {\n  return React.createElement(CalendarList, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 30\n    }\n  });\n};\n\nvar AgendaScreen = function AgendaScreen() {\n  return React.createElement(Agenda, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 28\n    }\n  });\n};\n\nvar Stack = createStackNavigator();\nimport SlidingUpPanel from \"rn-sliding-up-panel\";\nexport default function App() {\n  var animatedValue = new Animated.Value(10);\n\n  var _Dimensions$get = Dimensions.get(\"window\"),\n      height = _Dimensions$get.height;\n\n  var scheme = useColorScheme();\n  return React.createElement(View, {\n    style: styles.mainScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.mainTopScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(Calendar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), React.createElement(SlidingUpPanel, {\n    animatedValue: animatedValue,\n    draggableRange: {\n      top: height - 100,\n      bottom: height - 400\n    },\n    snappingPoints: [360],\n    height: height + 180,\n    friction: 0.5,\n    style: styles.panel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), React.createElement(NavigationContainer, {\n    theme: scheme === \"dark\" ? DarkTheme : DefaultTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    style: styles.panel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Tasks\",\n    component: TaskScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Calendar\",\n    component: CalendarScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Agenda\",\n    component: AgendaScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })))));\n}\nvar styles = StyleSheet.create({\n  test: {\n    height: 1,\n    backgroundColor: \"#111\"\n  },\n  mainScreen: {\n    flexDirection: \"column\",\n    height: \"100%\"\n  },\n  mainTopScreen: {\n    paddingTop: \"10%\",\n    height: \"40%\"\n  },\n  mainBottomScreen: {\n    paddingTop: \"0.3%\",\n    height: \"65%\",\n    backgroundColor: \"#975\"\n  },\n  panel: {\n    backgroundColor: \"#719\",\n    height: \"100%\"\n  }\n});","map":{"version":3,"sources":["/Users/kw/LocalDev/efficiently-app/App.js"],"names":["React","useState","Task","TaskScreen","HomeScreen","NavigationContainer","DefaultTheme","DarkTheme","createStackNavigator","Calendar","CalendarList","Agenda","CalendarScreen","AgendaScreen","Stack","SlidingUpPanel","App","animatedValue","Animated","Value","Dimensions","get","height","scheme","useColorScheme","styles","mainScreen","mainTopScreen","top","bottom","panel","test","StyleSheet","create","backgroundColor","flexDirection","paddingTop","mainBottomScreen"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  KeyboardAvoidingView,\n  Platform,\n  TextInput,\n  TouchableOpacity,\n  Keyboard,\n  Button,\n  ScrollView,\n  Animated,\n  Dimensions,\n} from \"react-native\";\nimport Task from \"./components/Task\";\nimport TaskScreen from \"./components/TaskScreen\";\nimport HomeScreen from \"./components/HomeScreen\";\nimport {\n  NavigationContainer,\n  DefaultTheme,\n  DarkTheme,\n} from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\nimport { useColorScheme } from \"react-native\";\n\nconst CalendarScreen = () => <CalendarList />;\nconst AgendaScreen = () => <Agenda />;\nconst Stack = createStackNavigator();\nimport SlidingUpPanel from \"rn-sliding-up-panel\";\n\nexport default function App() {\n  const animatedValue = new Animated.Value(10);\n  const { height } = Dimensions.get(\"window\");\n  const scheme = useColorScheme();\n  return (\n    <View style={styles.mainScreen}>\n      <View style={styles.mainTopScreen}>\n        <Calendar />\n      </View>\n      <SlidingUpPanel\n        animatedValue={animatedValue}\n        draggableRange={{ top: height - 100, bottom: height - 400 }}\n        snappingPoints={[360]}\n        height={height + 180}\n        friction={0.5}\n        style={styles.panel}\n      >\n        <View style={styles.test} />\n        <NavigationContainer\n          theme={scheme === \"dark\" ? DarkTheme : DefaultTheme}\n        >\n          <Stack.Navigator initialRouteName=\"Home\">\n            <Stack.Screen\n              name=\"Home\"\n              component={HomeScreen}\n              style={styles.panel}\n            />\n            <Stack.Screen name=\"Tasks\" component={TaskScreen} />\n            <Stack.Screen name=\"Calendar\" component={CalendarScreen} />\n            <Stack.Screen name=\"Agenda\" component={AgendaScreen} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </SlidingUpPanel>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  test: { height: 1, backgroundColor: \"#111\" },\n  mainScreen: {\n    flexDirection: \"column\",\n    height: \"100%\",\n  },\n\n  mainTopScreen: { paddingTop: \"10%\", height: \"40%\" },\n  mainBottomScreen: {\n    paddingTop: \"0.3%\",\n    height: \"65%\",\n    backgroundColor: \"#975\",\n  },\n  panel: {\n    backgroundColor: \"#719\",\n    height: \"100%\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}