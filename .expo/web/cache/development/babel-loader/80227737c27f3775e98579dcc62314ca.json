{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/kw/LocalDev/efficiently-app/node_modules/react-native-calendars/src/calendar/day/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport memoize from 'memoize-one';\nimport React, { Component } from 'react';\nimport { shouldUpdate } from \"../../component-updater\";\nimport dateutils from \"../../dateutils\";\nimport { xdateToData } from \"../../interface\";\nimport { SELECT_DATE_SLOT } from \"../../testIDs\";\nimport BasicDay from \"./basic\";\nimport PeriodDay from \"./period\";\n\nvar basicDayProps = _.omit(BasicDay.propTypes, 'date');\n\nvar Day = function (_Component) {\n  _inherits(Day, _Component);\n\n  var _super = _createSuper(Day);\n\n  function Day() {\n    var _this;\n\n    _classCallCheck(this, Day);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.getAccessibilityLabel = memoize(function (day, marking, isToday) {\n      var today = XDate.locales[XDate.defaultLocale].today;\n      var formatAccessibilityLabel = XDate.locales[XDate.defaultLocale].formatAccessibilityLabel;\n\n      var markingLabel = _this.getMarkingLabel(marking);\n\n      if (formatAccessibilityLabel) {\n        return (isToday ? today : '') + \" \" + day.toString(formatAccessibilityLabel) + \" \" + markingLabel;\n      }\n\n      return (isToday ? 'today' : '') + \" \" + day.toString('dddd d MMMM yyyy') + \" \" + markingLabel;\n    });\n    return _this;\n  }\n\n  _createClass(Day, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return shouldUpdate(this.props, nextProps, ['day', 'dayComponent', 'state', 'markingType', 'marking', 'onPress', 'onLongPress']);\n    }\n  }, {\n    key: \"getMarkingLabel\",\n    value: function getMarkingLabel(marking) {\n      var label = '';\n\n      if (marking) {\n        if (marking.accessibilityLabel) {\n          return marking.accessibilityLabel;\n        }\n\n        if (marking.selected) {\n          label += 'selected ';\n\n          if (!marking.marked) {\n            label += 'You have no entries for this day ';\n          }\n        }\n\n        if (marking.marked) {\n          label += 'You have entries for this day ';\n        }\n\n        if (marking.startingDay) {\n          label += 'period start ';\n        }\n\n        if (marking.endingDay) {\n          label += 'period end ';\n        }\n\n        if (marking.disabled || marking.disableTouchEvent) {\n          label += 'disabled ';\n        }\n      }\n\n      return label;\n    }\n  }, {\n    key: \"getDayComponent\",\n    value: function getDayComponent() {\n      var _this$props = this.props,\n          dayComponent = _this$props.dayComponent,\n          markingType = _this$props.markingType;\n\n      if (dayComponent) {\n        return dayComponent;\n      }\n\n      return markingType === 'period' ? PeriodDay : BasicDay;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          day = _this$props2.day,\n          marking = _this$props2.marking;\n      var date = xdateToData(day);\n      var isToday = dateutils.isToday(day);\n      var Component = this.getDayComponent();\n\n      var dayProps = _.omit(this.props, 'day');\n\n      var accessibilityLabel = this.getAccessibilityLabel(day, marking, isToday);\n      return React.createElement(Component, _extends({}, dayProps, {\n        date: date,\n        testID: SELECT_DATE_SLOT + \"-\" + date.dateString,\n        accessibilityLabel: accessibilityLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }\n      }), date ? day.getDate() : day);\n    }\n  }]);\n\n  return Day;\n}(Component);\n\nDay.displayName = 'IGNORE';\nDay.propTypes = _objectSpread(_objectSpread({}, basicDayProps), {}, {\n  day: PropTypes.object,\n  dayComponent: PropTypes.any\n});\nexport { Day as default };","map":{"version":3,"sources":["/Users/kw/LocalDev/efficiently-app/node_modules/react-native-calendars/src/calendar/day/index.js"],"names":["_","PropTypes","XDate","memoize","React","Component","shouldUpdate","dateutils","xdateToData","SELECT_DATE_SLOT","BasicDay","PeriodDay","basicDayProps","omit","propTypes","Day","getAccessibilityLabel","day","marking","isToday","today","locales","defaultLocale","formatAccessibilityLabel","markingLabel","getMarkingLabel","toString","nextProps","props","label","accessibilityLabel","selected","marked","startingDay","endingDay","disabled","disableTouchEvent","dayComponent","markingType","date","getDayComponent","dayProps","dateString","getDate","displayName","object","any"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport memoize from 'memoize-one';\n\nimport React, {Component} from 'react';\n\nimport {shouldUpdate} from '../../component-updater';\nimport dateutils from '../../dateutils';\nimport {xdateToData} from '../../interface';\nimport {SELECT_DATE_SLOT} from '../../testIDs';\nimport BasicDay from './basic';\nimport PeriodDay from './period';\n\nconst basicDayProps = _.omit(BasicDay.propTypes, 'date');\n\nexport default class Day extends Component {\n  static displayName = 'IGNORE';\n\n  static propTypes = {\n    ...basicDayProps,\n    /** The day to render */\n    day: PropTypes.object,\n    /** Provide custom day rendering component */\n    dayComponent: PropTypes.any\n  };\n\n  shouldComponentUpdate(nextProps) {\n    return shouldUpdate(this.props, nextProps, [\n      'day',\n      'dayComponent',\n      'state',\n      'markingType',\n      'marking',\n      'onPress',\n      'onLongPress'\n    ]);\n  }\n\n  getMarkingLabel(marking) {\n    let label = '';\n\n    if (marking) {\n      if (marking.accessibilityLabel) {\n        return marking.accessibilityLabel;\n      }\n\n      if (marking.selected) {\n        label += 'selected ';\n        if (!marking.marked) {\n          label += 'You have no entries for this day ';\n        }\n      }\n      if (marking.marked) {\n        label += 'You have entries for this day ';\n      }\n      if (marking.startingDay) {\n        label += 'period start ';\n      }\n      if (marking.endingDay) {\n        label += 'period end ';\n      }\n      if (marking.disabled || marking.disableTouchEvent) {\n        label += 'disabled ';\n      }\n    }\n    return label;\n  }\n\n  getAccessibilityLabel = memoize((day, marking, isToday) => {\n    const today = XDate.locales[XDate.defaultLocale].today;\n    const formatAccessibilityLabel = XDate.locales[XDate.defaultLocale].formatAccessibilityLabel;\n    const markingLabel = this.getMarkingLabel(marking);\n\n    if (formatAccessibilityLabel) {\n      return `${isToday ? today : ''} ${day.toString(formatAccessibilityLabel)} ${markingLabel}`;\n    }\n\n    return `${isToday ? 'today' : ''} ${day.toString('dddd d MMMM yyyy')} ${markingLabel}`;\n  });\n\n  getDayComponent() {\n    const {dayComponent, markingType} = this.props;\n\n    if (dayComponent) {\n      return dayComponent;\n    }\n    return markingType === 'period' ? PeriodDay : BasicDay;\n  }\n\n  render() {\n    const {day, marking} = this.props;\n    const date = xdateToData(day);\n    const isToday = dateutils.isToday(day);\n    const Component = this.getDayComponent();\n    const dayProps = _.omit(this.props, 'day');\n    const accessibilityLabel = this.getAccessibilityLabel(day, marking, isToday);\n\n    return (\n      <Component\n        {...dayProps}\n        date={date}\n        testID={`${SELECT_DATE_SLOT}-${date.dateString}`}\n        accessibilityLabel={accessibilityLabel}\n      >\n        {date ? day.getDate() : day}\n      </Component>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}