{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\NASSER\\\\Desktop\\\\efficiently\\\\app\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar\\\\day\\\\basic\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { Component, Fragment } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { shouldUpdate } from \"../../../component-updater\";\nimport styleConstructor from \"./style\";\nimport Marking from \"../marking\";\n\nvar BasicDay = function (_Component) {\n  _inherits(BasicDay, _Component);\n\n  var _super = _createSuper(BasicDay);\n\n  function BasicDay() {\n    var _this;\n\n    _classCallCheck(this, BasicDay);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.style = styleConstructor(_this.props.theme);\n\n    _this.onPress = function () {\n      _.invoke(_this.props, 'onPress', _this.props.date);\n    };\n\n    _this.onLongPress = function () {\n      _.invoke(_this.props, 'onLongPress', _this.props.date);\n    };\n\n    return _this;\n  }\n\n  _createClass(BasicDay, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return shouldUpdate(this.props, nextProps, ['children', 'state', 'markingType', 'marking', 'onPress', 'onLongPress', 'date']);\n    }\n  }, {\n    key: \"marking\",\n    get: function get() {\n      var marking = this.props.marking || {};\n\n      if (marking && marking.constructor === Array && marking.length) {\n        marking = {\n          marking: true\n        };\n      }\n\n      return marking;\n    }\n  }, {\n    key: \"shouldDisableTouchEvent\",\n    value: function shouldDisableTouchEvent() {\n      var disableAllTouchEventsForDisabledDays = this.props.disableAllTouchEventsForDisabledDays;\n      var disableTouchEvent = this.marking.disableTouchEvent;\n      var disableTouch = false;\n\n      if (typeof disableTouchEvent === 'boolean') {\n        disableTouch = disableTouchEvent;\n      } else if (typeof disableAllTouchEventsForDisabledDays === 'boolean' && this.isDisabled()) {\n        disableTouch = disableAllTouchEventsForDisabledDays;\n      }\n\n      return disableTouch;\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected() {\n      return this.marking.selected || this.props.state === 'selected';\n    }\n  }, {\n    key: \"isDisabled\",\n    value: function isDisabled() {\n      return typeof this.marking.disabled !== 'undefined' ? this.marking.disabled : this.props.state === 'disabled';\n    }\n  }, {\n    key: \"isToday\",\n    value: function isToday() {\n      return this.props.state === 'today';\n    }\n  }, {\n    key: \"isMultiDot\",\n    value: function isMultiDot() {\n      return this.props.markingType === Marking.markingTypes.multiDot;\n    }\n  }, {\n    key: \"isMultiPeriod\",\n    value: function isMultiPeriod() {\n      return this.props.markingType === Marking.markingTypes.multiPeriod;\n    }\n  }, {\n    key: \"isCustom\",\n    value: function isCustom() {\n      return this.props.markingType === Marking.markingTypes.custom;\n    }\n  }, {\n    key: \"getContainerStyle\",\n    value: function getContainerStyle() {\n      var _this$marking = this.marking,\n          customStyles = _this$marking.customStyles,\n          selectedColor = _this$marking.selectedColor;\n      var style = [this.style.base];\n\n      if (this.isSelected()) {\n        style.push(this.style.selected);\n\n        if (selectedColor) {\n          style.push({\n            backgroundColor: selectedColor\n          });\n        }\n      } else if (this.isToday()) {\n        style.push(this.style.today);\n      }\n\n      if (this.isCustom() && customStyles && customStyles.container) {\n        if (customStyles.container.borderRadius === undefined) {\n          customStyles.container.borderRadius = 16;\n        }\n\n        style.push(customStyles.container);\n      }\n\n      return style;\n    }\n  }, {\n    key: \"getTextStyle\",\n    value: function getTextStyle() {\n      var _this$marking2 = this.marking,\n          customStyles = _this$marking2.customStyles,\n          selectedTextColor = _this$marking2.selectedTextColor;\n      var style = [this.style.text];\n\n      if (this.isSelected()) {\n        style.push(this.style.selectedText);\n\n        if (selectedTextColor) {\n          style.push({\n            color: selectedTextColor\n          });\n        }\n      } else if (this.isDisabled()) {\n        style.push(this.style.disabledText);\n      } else if (this.isToday()) {\n        style.push(this.style.todayText);\n      }\n\n      if (this.isCustom() && customStyles && customStyles.text) {\n        style.push(customStyles.text);\n      }\n\n      return style;\n    }\n  }, {\n    key: \"renderMarking\",\n    value: function renderMarking() {\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          markingType = _this$props.markingType;\n      var _this$marking3 = this.marking,\n          marked = _this$marking3.marked,\n          dotColor = _this$marking3.dotColor,\n          dots = _this$marking3.dots,\n          periods = _this$marking3.periods;\n      return React.createElement(Marking, {\n        type: markingType,\n        theme: theme,\n        marked: this.isMultiDot() ? true : marked,\n        selected: this.isSelected(),\n        disabled: this.isDisabled(),\n        today: this.isToday(),\n        dotColor: dotColor,\n        dots: dots,\n        periods: periods,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      });\n    }\n  }, {\n    key: \"renderText\",\n    value: function renderText() {\n      return React.createElement(Text, {\n        allowFontScaling: false,\n        style: this.getTextStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, String(this.props.children));\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      return React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }, this.renderText(), this.renderMarking());\n    }\n  }, {\n    key: \"renderContainer\",\n    value: function renderContainer() {\n      var activeOpacity = this.marking.activeOpacity;\n      return React.createElement(TouchableOpacity, {\n        testID: this.props.testID,\n        style: this.getContainerStyle(),\n        disabled: this.shouldDisableTouchEvent(),\n        activeOpacity: activeOpacity,\n        onPress: !this.shouldDisableTouchEvent() ? this.onPress : undefined,\n        onLongPress: !this.shouldDisableTouchEvent() ? this.onLongPress : undefined,\n        accessible: true,\n        accessibilityRole: this.isDisabled() ? undefined : 'button',\n        accessibilityLabel: this.props.accessibilityLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, this.isMultiPeriod() ? this.renderText() : this.renderContent());\n    }\n  }, {\n    key: \"renderPeriodsContainer\",\n    value: function renderPeriodsContainer() {\n      return React.createElement(View, {\n        style: this.style.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }\n      }, this.renderContainer(), this.renderMarking());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.isMultiPeriod() ? this.renderPeriodsContainer() : this.renderContainer();\n    }\n  }]);\n\n  return BasicDay;\n}(Component);\n\nBasicDay.displayName = 'IGNORE';\nBasicDay.propTypes = {\n  state: PropTypes.oneOf(['selected', 'disabled', 'today', '']),\n  marking: PropTypes.any,\n  markingType: PropTypes.oneOf(_.values(Marking.markingTypes)),\n  theme: PropTypes.object,\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  date: PropTypes.object,\n  disableAllTouchEventsForDisabledDays: PropTypes.bool\n};\nexport { BasicDay as default };","map":{"version":3,"sources":["C:/Users/NASSER/Desktop/efficiently/app/node_modules/react-native-calendars/src/calendar/day/basic/index.js"],"names":["_","PropTypes","React","Component","Fragment","shouldUpdate","styleConstructor","Marking","BasicDay","style","props","theme","onPress","invoke","date","onLongPress","nextProps","marking","constructor","Array","length","disableAllTouchEventsForDisabledDays","disableTouchEvent","disableTouch","isDisabled","selected","state","disabled","markingType","markingTypes","multiDot","multiPeriod","custom","customStyles","selectedColor","base","isSelected","push","backgroundColor","isToday","today","isCustom","container","borderRadius","undefined","selectedTextColor","text","selectedText","color","disabledText","todayText","marked","dotColor","dots","periods","isMultiDot","getTextStyle","String","children","renderText","renderMarking","activeOpacity","testID","getContainerStyle","shouldDisableTouchEvent","accessibilityLabel","isMultiPeriod","renderContent","renderContainer","renderPeriodsContainer","displayName","propTypes","oneOf","any","values","object","func","bool"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { Component, Fragment } from 'react';\nimport { TouchableOpacity, Text, View } from 'react-native';\n// @ts-expect-error\nimport { shouldUpdate } from '../../../component-updater';\nimport styleConstructor from './style';\n// @ts-expect-error\nimport Marking from '../marking';\nexport default class BasicDay extends Component {\n    static displayName = 'IGNORE';\n    static propTypes = {\n        state: PropTypes.oneOf(['selected', 'disabled', 'today', '']),\n        /** The marking object */\n        marking: PropTypes.any,\n        /** Date marking style [simple/period/multi-dot/multi-period]. Default = 'simple' */\n        markingType: PropTypes.oneOf(_.values(Marking.markingTypes)),\n        /** Theme object */\n        theme: PropTypes.object,\n        /** onPress callback */\n        onPress: PropTypes.func,\n        /** onLongPress callback */\n        onLongPress: PropTypes.func,\n        /** The date to return from press callbacks */\n        date: PropTypes.object,\n        /** Disable all touch events for disabled days. can be override with disableTouchEvent in markedDates*/\n        disableAllTouchEventsForDisabledDays: PropTypes.bool\n    };\n    style = styleConstructor(this.props.theme);\n    shouldComponentUpdate(nextProps) {\n        return shouldUpdate(this.props, nextProps, [\n            'children',\n            'state',\n            'markingType',\n            'marking',\n            'onPress',\n            'onLongPress',\n            'date'\n        ]);\n    }\n    onPress = () => {\n        _.invoke(this.props, 'onPress', this.props.date);\n    };\n    onLongPress = () => {\n        _.invoke(this.props, 'onLongPress', this.props.date);\n    };\n    get marking() {\n        let marking = this.props.marking || {};\n        if (marking && marking.constructor === Array && marking.length) {\n            marking = {\n                marking: true\n            };\n        }\n        return marking;\n    }\n    shouldDisableTouchEvent() {\n        const { disableAllTouchEventsForDisabledDays } = this.props;\n        const { disableTouchEvent } = this.marking;\n        let disableTouch = false;\n        if (typeof disableTouchEvent === 'boolean') {\n            disableTouch = disableTouchEvent;\n        }\n        else if (typeof disableAllTouchEventsForDisabledDays === 'boolean' && this.isDisabled()) {\n            disableTouch = disableAllTouchEventsForDisabledDays;\n        }\n        return disableTouch;\n    }\n    isSelected() {\n        return this.marking.selected || this.props.state === 'selected';\n    }\n    isDisabled() {\n        return typeof this.marking.disabled !== 'undefined' ? this.marking.disabled : this.props.state === 'disabled';\n    }\n    isToday() {\n        return this.props.state === 'today';\n    }\n    isMultiDot() {\n        return this.props.markingType === Marking.markingTypes.multiDot;\n    }\n    isMultiPeriod() {\n        return this.props.markingType === Marking.markingTypes.multiPeriod;\n    }\n    isCustom() {\n        return this.props.markingType === Marking.markingTypes.custom;\n    }\n    getContainerStyle() {\n        const { customStyles, selectedColor } = this.marking;\n        const style = [this.style.base];\n        if (this.isSelected()) {\n            style.push(this.style.selected);\n            if (selectedColor) {\n                style.push({ backgroundColor: selectedColor });\n            }\n        }\n        else if (this.isToday()) {\n            style.push(this.style.today);\n        }\n        //Custom marking type\n        if (this.isCustom() && customStyles && customStyles.container) {\n            if (customStyles.container.borderRadius === undefined) {\n                customStyles.container.borderRadius = 16;\n            }\n            style.push(customStyles.container);\n        }\n        return style;\n    }\n    getTextStyle() {\n        const { customStyles, selectedTextColor } = this.marking;\n        const style = [this.style.text];\n        if (this.isSelected()) {\n            style.push(this.style.selectedText);\n            if (selectedTextColor) {\n                style.push({ color: selectedTextColor });\n            }\n        }\n        else if (this.isDisabled()) {\n            style.push(this.style.disabledText);\n        }\n        else if (this.isToday()) {\n            style.push(this.style.todayText);\n        }\n        //Custom marking type\n        if (this.isCustom() && customStyles && customStyles.text) {\n            style.push(customStyles.text);\n        }\n        return style;\n    }\n    renderMarking() {\n        const { theme, markingType } = this.props;\n        const { marked, dotColor, dots, periods } = this.marking;\n        return (<Marking type={markingType} theme={theme} marked={this.isMultiDot() ? true : marked} selected={this.isSelected()} disabled={this.isDisabled()} today={this.isToday()} dotColor={dotColor} dots={dots} periods={periods}/>);\n    }\n    renderText() {\n        return (<Text allowFontScaling={false} style={this.getTextStyle()}>\n        {String(this.props.children)}\n      </Text>);\n    }\n    renderContent() {\n        return (<Fragment>\n        {this.renderText()}\n        {this.renderMarking()}\n      </Fragment>);\n    }\n    renderContainer() {\n        const { activeOpacity } = this.marking;\n        return (<TouchableOpacity testID={this.props.testID} style={this.getContainerStyle()} disabled={this.shouldDisableTouchEvent()} activeOpacity={activeOpacity} onPress={!this.shouldDisableTouchEvent() ? this.onPress : undefined} onLongPress={!this.shouldDisableTouchEvent() ? this.onLongPress : undefined} accessible accessibilityRole={this.isDisabled() ? undefined : 'button'} accessibilityLabel={this.props.accessibilityLabel}>\n        {this.isMultiPeriod() ? this.renderText() : this.renderContent()}\n      </TouchableOpacity>);\n    }\n    renderPeriodsContainer() {\n        return (<View style={this.style.container}>\n        {this.renderContainer()}\n        {this.renderMarking()}\n      </View>);\n    }\n    render() {\n        return this.isMultiPeriod() ? this.renderPeriodsContainer() : this.renderContainer();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}