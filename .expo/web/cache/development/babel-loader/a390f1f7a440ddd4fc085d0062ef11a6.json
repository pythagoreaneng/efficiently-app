{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/kw/LocalDev/efficiently-app/node_modules/react-native-calendars/src/agenda/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport memoize from 'memoize-one';\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { extractComponentProps } from \"../component-updater\";\nimport { parseDate, xdateToData, toMarkingFormat } from \"../interface\";\nimport dateutils from \"../dateutils\";\nimport { AGENDA_CALENDAR_KNOB } from \"../testIDs\";\nimport { VelocityTracker } from \"../input\";\nimport styleConstructor from \"./style\";\nimport CalendarList from \"../calendar-list\";\nimport ReservationList from \"./reservation-list\";\nvar HEADER_HEIGHT = 104;\nvar KNOB_HEIGHT = 24;\n\nvar AgendaView = function (_Component) {\n  _inherits(AgendaView, _Component);\n\n  var _super = _createSuper(AgendaView);\n\n  function AgendaView(props) {\n    var _this;\n\n    _classCallCheck(this, AgendaView);\n\n    _this = _super.call(this, props);\n\n    _this.initialScrollPadPosition = function () {\n      return Math.max(0, _this.viewHeight - HEADER_HEIGHT);\n    };\n\n    _this.setScrollPadPosition = function (y, animated) {\n      if (_this.scrollPad.scrollTo) {\n        _this.scrollPad.scrollTo({\n          x: 0,\n          y: y,\n          animated: animated\n        });\n      } else {\n        _this.scrollPad.getNode().scrollTo({\n          x: 0,\n          y: y,\n          animated: animated\n        });\n      }\n    };\n\n    _this.toggleCalendarPosition = function (open) {\n      var maxY = _this.initialScrollPadPosition();\n\n      _this.setScrollPadPosition(open ? 0 : maxY, true);\n\n      _this.enableCalendarScrolling(open);\n    };\n\n    _this.chooseDayFromCalendar = function (d) {\n      _this.chooseDay(d, !_this.state.calendarScrollable);\n    };\n\n    _this.generateMarkings = memoize(function (selectedDay, markedDates) {\n      var items = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (!markedDates) {\n        markedDates = {};\n        Object.keys(items).forEach(function (key) {\n          if (items[key] && items[key].length) {\n            markedDates[key] = {\n              marked: true\n            };\n          }\n        });\n      }\n\n      var key = toMarkingFormat(selectedDay);\n      return _objectSpread(_objectSpread({}, markedDates), {}, _defineProperty({}, key, _objectSpread(_objectSpread({}, markedDates[key] || {}), {\n        selected: true\n      })));\n    });\n\n    _this.onScrollPadLayout = function () {\n      _this.setScrollPadPosition(_this.initialScrollPadPosition(), false);\n\n      setTimeout(function () {\n        return _this.setState({\n          calendarIsReady: true\n        });\n      }, 0);\n    };\n\n    _this.onCalendarListLayout = function () {\n      _this.calendar.scrollToDay(_this.state.selectedDay.clone(), _this.calendarOffset(), false);\n    };\n\n    _this.onLayout = function (event) {\n      _this.viewHeight = event.nativeEvent.layout.height;\n      _this.viewWidth = event.nativeEvent.layout.width;\n\n      _this.forceUpdate();\n    };\n\n    _this.onTouchStart = function () {\n      _this.headerState = 'touched';\n\n      if (_this.knob) {\n        _this.knob.setNativeProps({\n          style: {\n            opacity: 0.5\n          }\n        });\n      }\n    };\n\n    _this.onTouchEnd = function () {\n      if (_this.knob) {\n        _this.knob.setNativeProps({\n          style: {\n            opacity: 1\n          }\n        });\n      }\n\n      if (_this.headerState === 'touched') {\n        var isOpen = _this.state.calendarScrollable;\n\n        _this.toggleCalendarPosition(!isOpen);\n      }\n\n      _this.headerState = 'idle';\n    };\n\n    _this.onStartDrag = function () {\n      _this.headerState = 'dragged';\n\n      _this.knobTracker.reset();\n    };\n\n    _this.onSnapAfterDrag = function (e) {\n      _this.onTouchEnd();\n\n      var currentY = e.nativeEvent.contentOffset.y;\n\n      _this.knobTracker.add(currentY);\n\n      var projectedY = currentY + _this.knobTracker.estimateSpeed() * 250;\n\n      var maxY = _this.initialScrollPadPosition();\n\n      var snapY = projectedY > maxY / 2 ? maxY : 0;\n\n      _this.setScrollPadPosition(snapY, true);\n\n      _this.enableCalendarScrolling(snapY === 0);\n    };\n\n    _this.onVisibleMonthsChange = function (months) {\n      _.invoke(_this.props, 'onVisibleMonthsChange', months);\n\n      if (_this.props.items && !_this.state.firstReservationLoad) {\n        clearTimeout(_this.scrollTimeout);\n        _this.scrollTimeout = setTimeout(function () {\n          if (_this._isMounted) {\n            _.invoke(_this.props, 'loadItemsForMonth', months[0]);\n          }\n        }, 200);\n      }\n    };\n\n    _this.onDayChange = function (day) {\n      var newDate = parseDate(day);\n      var withAnimation = dateutils.sameMonth(newDate, _this.state.selectedDay);\n\n      _this.calendar.scrollToDay(day, _this.calendarOffset(), withAnimation);\n\n      _this.setState({\n        selectedDay: newDate\n      });\n\n      _.invoke(_this.props, 'onDayChange', xdateToData(newDate));\n    };\n\n    _this.renderWeekDaysNames = memoize(function (weekDaysNames) {\n      return weekDaysNames.map(function (day, index) {\n        return React.createElement(Text, {\n          allowFontScaling: false,\n          key: day + index,\n          style: _this.style.weekday,\n          numberOfLines: 1,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 7\n          }\n        }, day);\n      });\n    });\n\n    _this.renderWeekNumbersSpace = function () {\n      return _this.props.showWeekNumbers && React.createElement(View, {\n        allowFontScaling: false,\n        style: _this.style.weekday,\n        numberOfLines: 1,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 42\n        }\n      });\n    };\n\n    _this.style = styleConstructor(props.theme);\n    var windowSize = Dimensions.get('window');\n    _this.viewHeight = windowSize.height;\n    _this.viewWidth = windowSize.width;\n    _this.scrollTimeout = undefined;\n    _this.headerState = 'idle';\n    _this.state = {\n      scrollY: new Animated.Value(0),\n      calendarIsReady: false,\n      calendarScrollable: false,\n      firstReservationLoad: false,\n      selectedDay: parseDate(props.selected) || XDate(true),\n      topDay: parseDate(props.selected) || XDate(true)\n    };\n    _this.currentMonth = _this.state.selectedDay.clone();\n    _this.knobTracker = new VelocityTracker();\n\n    _this.state.scrollY.addListener(function (_ref) {\n      var value = _ref.value;\n      return _this.knobTracker.add(value);\n    });\n\n    return _this;\n  }\n\n  _createClass(AgendaView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this.loadReservations(this.props);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n      this.state.scrollY.removeAllListeners();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.selected && !dateutils.sameDate(parseDate(this.props.selected), parseDate(prevProps.selected))) {\n        this.setState({\n          selectedDay: parseDate(this.props.selected)\n        });\n      } else if (!prevProps.items) {\n        this.loadReservations(this.props);\n      }\n    }\n  }, {\n    key: \"calendarOffset\",\n    value: function calendarOffset() {\n      return 96 - this.viewHeight / 2;\n    }\n  }, {\n    key: \"enableCalendarScrolling\",\n    value: function enableCalendarScrolling() {\n      var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.setState({\n        calendarScrollable: enable\n      });\n\n      _.invoke(this.props, 'onCalendarToggled', enable);\n\n      this.calendar.scrollToDay(this.state.selectedDay, this.calendarOffset() + 1, true);\n    }\n  }, {\n    key: \"loadReservations\",\n    value: function loadReservations(props) {\n      var _this2 = this;\n\n      if ((!props.items || !Object.keys(props.items).length) && !this.state.firstReservationLoad) {\n        this.setState({\n          firstReservationLoad: true\n        }, function () {\n          _.invoke(_this2.props, 'loadItemsForMonth', xdateToData(_this2.state.selectedDay));\n        });\n      }\n    }\n  }, {\n    key: \"chooseDay\",\n    value: function chooseDay(d, optimisticScroll) {\n      var day = parseDate(d);\n      this.setState({\n        calendarScrollable: false,\n        selectedDay: day.clone()\n      });\n\n      _.invoke(this.props, 'onCalendarToggled', false);\n\n      if (!optimisticScroll) {\n        this.setState({\n          topDay: day.clone()\n        });\n      }\n\n      this.setScrollPadPosition(this.initialScrollPadPosition(), true);\n      this.calendar.scrollToDay(day, this.calendarOffset(), true);\n\n      _.invoke(this.props, 'loadItemsForMonth', xdateToData(day));\n\n      _.invoke(this.props, 'onDayPress', xdateToData(day));\n    }\n  }, {\n    key: \"renderReservations\",\n    value: function renderReservations() {\n      var _this3 = this;\n\n      var reservationListProps = extractComponentProps(ReservationList, this.props);\n      return React.createElement(ReservationList, _extends({}, reservationListProps, {\n        ref: function ref(c) {\n          return _this3.list = c;\n        },\n        reservations: this.props.items,\n        selectedDay: this.state.selectedDay,\n        topDay: this.state.topDay,\n        onDayChange: this.onDayChange,\n        onScroll: function onScroll() {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 7\n        }\n      }));\n    }\n  }, {\n    key: \"renderCalendarList\",\n    value: function renderCalendarList() {\n      var _this4 = this;\n\n      var _this$props = this.props,\n          markedDates = _this$props.markedDates,\n          items = _this$props.items;\n      var shouldHideExtraDays = this.state.calendarScrollable ? this.props.hideExtraDays : false;\n      var calendarListProps = extractComponentProps(CalendarList, this.props);\n      return React.createElement(CalendarList, _extends({}, calendarListProps, {\n        ref: function ref(c) {\n          return _this4.calendar = c;\n        },\n        current: this.currentMonth,\n        markedDates: this.generateMarkings(this.state.selectedDay, markedDates, items),\n        calendarWidth: this.viewWidth,\n        scrollEnabled: this.state.calendarScrollable,\n        hideExtraDays: shouldHideExtraDays,\n        onLayout: this.onCalendarListLayout,\n        onDayPress: this.chooseDayFromCalendar,\n        onVisibleMonthsChange: this.onVisibleMonthsChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 7\n        }\n      }));\n    }\n  }, {\n    key: \"renderKnob\",\n    value: function renderKnob() {\n      var _this5 = this;\n\n      var _this$props2 = this.props,\n          showClosingKnob = _this$props2.showClosingKnob,\n          hideKnob = _this$props2.hideKnob,\n          renderKnob = _this$props2.renderKnob;\n      var knob = React.createElement(View, {\n        style: this.style.knobContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 16\n        }\n      });\n\n      if (!hideKnob) {\n        var knobView = renderKnob ? renderKnob() : React.createElement(View, {\n          style: this.style.knob,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 52\n          }\n        });\n        knob = !this.state.calendarScrollable || showClosingKnob ? React.createElement(View, {\n          style: this.style.knobContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          ref: function ref(c) {\n            return _this5.knob = c;\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 11\n          }\n        }, knobView)) : null;\n      }\n\n      return knob;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var _this$props3 = this.props,\n          firstDay = _this$props3.firstDay,\n          hideKnob = _this$props3.hideKnob,\n          style = _this$props3.style,\n          testID = _this$props3.testID;\n      var weekDaysNames = dateutils.weekDayNames(firstDay);\n      var agendaHeight = this.initialScrollPadPosition();\n      var weekdaysStyle = [this.style.weekdays, {\n        opacity: this.state.scrollY.interpolate({\n          inputRange: [agendaHeight - HEADER_HEIGHT, agendaHeight],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        }),\n        transform: [{\n          translateY: this.state.scrollY.interpolate({\n            inputRange: [Math.max(0, agendaHeight - HEADER_HEIGHT), agendaHeight],\n            outputRange: [-HEADER_HEIGHT, 0],\n            extrapolate: 'clamp'\n          })\n        }]\n      }];\n      var headerTranslate = this.state.scrollY.interpolate({\n        inputRange: [0, agendaHeight],\n        outputRange: [agendaHeight, 0],\n        extrapolate: 'clamp'\n      });\n      var contentTranslate = this.state.scrollY.interpolate({\n        inputRange: [0, agendaHeight],\n        outputRange: [0, agendaHeight / 2],\n        extrapolate: 'clamp'\n      });\n      var headerStyle = [this.style.header, {\n        bottom: agendaHeight,\n        transform: [{\n          translateY: headerTranslate\n        }]\n      }];\n\n      if (!this.state.calendarIsReady) {\n        headerStyle.push({\n          height: 0\n        });\n        weekdaysStyle.push({\n          height: HEADER_HEIGHT\n        });\n      }\n\n      var openCalendarScrollPadPosition = !hideKnob && this.state.calendarScrollable && this.props.showClosingKnob ? agendaHeight + HEADER_HEIGHT : 0;\n      var shouldAllowDragging = !hideKnob && !this.state.calendarScrollable;\n      var scrollPadPosition = (shouldAllowDragging ? HEADER_HEIGHT : openCalendarScrollPadPosition) - KNOB_HEIGHT;\n      var scrollPadStyle = {\n        position: 'absolute',\n        width: 80,\n        height: KNOB_HEIGHT,\n        top: scrollPadPosition,\n        left: (this.viewWidth - 80) / 2\n      };\n      return React.createElement(View, {\n        testID: testID,\n        onLayout: this.onLayout,\n        style: [style, this.style.container],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: this.style.reservations,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 9\n        }\n      }, this.renderReservations()), React.createElement(Animated.View, {\n        style: headerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: [this.style.animatedContainer, {\n          transform: [{\n            translateY: contentTranslate\n          }]\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }\n      }, this.renderCalendarList()), this.renderKnob()), React.createElement(Animated.View, {\n        style: weekdaysStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 9\n        }\n      }, this.renderWeekNumbersSpace(), this.renderWeekDaysNames(weekDaysNames)), React.createElement(Animated.ScrollView, {\n        ref: function ref(_ref2) {\n          return _this6.scrollPad = _ref2;\n        },\n        style: scrollPadStyle,\n        overScrollMode: \"never\",\n        showsHorizontalScrollIndicator: false,\n        showsVerticalScrollIndicator: false,\n        scrollEventThrottle: 8,\n        scrollsToTop: false,\n        onTouchStart: this.onTouchStart,\n        onTouchEnd: this.onTouchEnd,\n        onScrollBeginDrag: this.onStartDrag,\n        onScrollEndDrag: this.onSnapAfterDrag,\n        onScroll: Animated.event([{\n          nativeEvent: {\n            contentOffset: {\n              y: this.state.scrollY\n            }\n          }\n        }], {\n          useNativeDriver: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        testID: AGENDA_CALENDAR_KNOB,\n        style: {\n          height: agendaHeight + KNOB_HEIGHT\n        },\n        onLayout: this.onScrollPadLayout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if (nextProps.items) {\n        return {\n          firstReservationLoad: false\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return AgendaView;\n}(Component);\n\nAgendaView.displayName = 'Agenda';\nAgendaView.propTypes = _objectSpread(_objectSpread(_objectSpread({}, CalendarList.propTypes), ReservationList.propTypes), {}, {\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n  items: PropTypes.object,\n  loadItemsForMonth: PropTypes.func,\n  onCalendarToggled: PropTypes.func,\n  onDayPress: PropTypes.func,\n  onDaychange: PropTypes.func,\n  renderKnob: PropTypes.func,\n  selected: PropTypes.any,\n  hideKnob: PropTypes.bool,\n  showClosingKnob: PropTypes.bool\n});\nexport { AgendaView as default };","map":{"version":3,"sources":["/Users/kw/LocalDev/efficiently-app/node_modules/react-native-calendars/src/agenda/index.js"],"names":["_","PropTypes","XDate","memoize","React","Component","extractComponentProps","parseDate","xdateToData","toMarkingFormat","dateutils","AGENDA_CALENDAR_KNOB","VelocityTracker","styleConstructor","CalendarList","ReservationList","HEADER_HEIGHT","KNOB_HEIGHT","AgendaView","props","initialScrollPadPosition","Math","max","viewHeight","setScrollPadPosition","y","animated","scrollPad","scrollTo","x","getNode","toggleCalendarPosition","open","maxY","enableCalendarScrolling","chooseDayFromCalendar","d","chooseDay","state","calendarScrollable","generateMarkings","selectedDay","markedDates","items","Object","keys","forEach","key","length","marked","selected","onScrollPadLayout","setTimeout","setState","calendarIsReady","onCalendarListLayout","calendar","scrollToDay","clone","calendarOffset","onLayout","event","nativeEvent","layout","height","viewWidth","width","forceUpdate","onTouchStart","headerState","knob","setNativeProps","style","opacity","onTouchEnd","isOpen","onStartDrag","knobTracker","reset","onSnapAfterDrag","e","currentY","contentOffset","add","projectedY","estimateSpeed","snapY","onVisibleMonthsChange","months","invoke","firstReservationLoad","clearTimeout","scrollTimeout","_isMounted","onDayChange","day","newDate","withAnimation","sameMonth","renderWeekDaysNames","weekDaysNames","map","index","weekday","renderWeekNumbersSpace","showWeekNumbers","theme","windowSize","Dimensions","get","undefined","scrollY","Animated","Value","topDay","currentMonth","addListener","value","loadReservations","removeAllListeners","prevProps","sameDate","enable","optimisticScroll","reservationListProps","c","list","shouldHideExtraDays","hideExtraDays","calendarListProps","showClosingKnob","hideKnob","renderKnob","knobContainer","knobView","firstDay","testID","weekDayNames","agendaHeight","weekdaysStyle","weekdays","interpolate","inputRange","outputRange","extrapolate","transform","translateY","headerTranslate","contentTranslate","headerStyle","header","bottom","push","openCalendarScrollPadPosition","shouldAllowDragging","scrollPadPosition","scrollPadStyle","position","top","left","container","reservations","renderReservations","animatedContainer","renderCalendarList","ref","useNativeDriver","nextProps","displayName","propTypes","oneOfType","object","array","number","loadItemsForMonth","func","onCalendarToggled","onDayPress","onDaychange","any","bool"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport memoize from 'memoize-one';\n\nimport React, {Component} from 'react';\nimport {Text, View, Dimensions, Animated} from 'react-native';\n\nimport {extractComponentProps} from '../component-updater';\nimport {parseDate, xdateToData, toMarkingFormat} from '../interface';\nimport dateutils from '../dateutils';\nimport {AGENDA_CALENDAR_KNOB} from '../testIDs';\nimport {VelocityTracker} from '../input';\nimport styleConstructor from './style';\nimport CalendarList from '../calendar-list';\nimport ReservationList from './reservation-list';\n\nconst HEADER_HEIGHT = 104;\nconst KNOB_HEIGHT = 24;\n\n/**\n * @description: Agenda component\n * @extends: CalendarList\n * @extendslink: docs/CalendarList\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/agenda.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/agenda.gif\n */\nexport default class AgendaView extends Component {\n  static displayName = 'Agenda';\n\n  static propTypes = {\n    ...CalendarList.propTypes,\n    ...ReservationList.propTypes,\n    /** agenda container style */\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n    /** the list of items that have to be displayed in agenda. If you want to render item as empty date\n     the value of date key has to be an empty array []. If there exists no value for date key it is\n     considered that the date in question is not yet loaded */\n    items: PropTypes.object,\n    /** callback that gets called when items for a certain month should be loaded (month became visible) */\n    loadItemsForMonth: PropTypes.func,\n    /** callback that fires when the calendar is opened or closed */\n    onCalendarToggled: PropTypes.func,\n    /** callback that gets called on day press */\n    onDayPress: PropTypes.func,\n    /** callback that gets called when day changes while scrolling agenda list */\n    onDaychange: PropTypes.func, //TODO: Should be renamed 'onDayChange'\n    /** specify how agenda knob should look like */\n    renderKnob: PropTypes.func,\n    /** initially selected day */\n    selected: PropTypes.any, //TODO: Should be renamed 'selectedDay'\n    /** Hide knob button. Default = false */\n    hideKnob: PropTypes.bool,\n    /** When `true` and `hideKnob` prop is `false`, the knob will always be visible and the user will be able to drag the knob up and close the calendar. Default = false */\n    showClosingKnob: PropTypes.bool\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.style = styleConstructor(props.theme);\n\n    const windowSize = Dimensions.get('window');\n    this.viewHeight = windowSize.height;\n    this.viewWidth = windowSize.width;\n\n    this.scrollTimeout = undefined;\n    this.headerState = 'idle';\n\n    this.state = {\n      scrollY: new Animated.Value(0),\n      calendarIsReady: false,\n      calendarScrollable: false,\n      firstReservationLoad: false,\n      selectedDay: parseDate(props.selected) || XDate(true),\n      topDay: parseDate(props.selected) || XDate(true)\n    };\n\n    this.currentMonth = this.state.selectedDay.clone();\n\n    this.knobTracker = new VelocityTracker();\n    this.state.scrollY.addListener(({value}) => this.knobTracker.add(value));\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.loadReservations(this.props);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    this.state.scrollY.removeAllListeners();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.selected && !dateutils.sameDate(parseDate(this.props.selected), parseDate(prevProps.selected))) {\n      this.setState({selectedDay: parseDate(this.props.selected)});\n    } else if (!prevProps.items) {\n      this.loadReservations(this.props);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.items) {\n      return {firstReservationLoad: false};\n    }\n\n    return null;\n  }\n\n  calendarOffset() {\n    return 96 - this.viewHeight / 2;\n  }\n\n  initialScrollPadPosition = () => {\n    return Math.max(0, this.viewHeight - HEADER_HEIGHT);\n  };\n\n  setScrollPadPosition = (y, animated) => {\n    if (this.scrollPad.scrollTo) {\n      this.scrollPad.scrollTo({x: 0, y, animated});\n    } else {\n      // Support for RN O.61 (Expo 37)\n      this.scrollPad.getNode().scrollTo({x: 0, y, animated});\n    }\n  };\n\n  toggleCalendarPosition = open => {\n    const maxY = this.initialScrollPadPosition();\n    this.setScrollPadPosition(open ? 0 : maxY, true);\n    this.enableCalendarScrolling(open);\n  };\n\n  enableCalendarScrolling(enable = true) {\n    this.setState({\n      calendarScrollable: enable\n    });\n\n    _.invoke(this.props, 'onCalendarToggled', enable);\n\n    // Enlarge calendarOffset here as a workaround on iOS to force repaint.\n    // Otherwise the month after current one or before current one remains invisible.\n    // The problem is caused by overflow: 'hidden' style, which we need for dragging\n    // to be performant.\n    // Another working solution for this bug would be to set removeClippedSubviews={false}\n    // in CalendarList listView, but that might impact performance when scrolling\n    // month list in expanded CalendarList.\n    // Further info https://github.com/facebook/react-native/issues/1831\n    this.calendar.scrollToDay(this.state.selectedDay, this.calendarOffset() + 1, true);\n  }\n\n  loadReservations(props) {\n    if ((!props.items || !Object.keys(props.items).length) && !this.state.firstReservationLoad) {\n      this.setState(\n        {\n          firstReservationLoad: true\n        },\n        () => {\n          _.invoke(this.props, 'loadItemsForMonth', xdateToData(this.state.selectedDay));\n        }\n      );\n    }\n  }\n\n  chooseDayFromCalendar = d => {\n    this.chooseDay(d, !this.state.calendarScrollable);\n  };\n\n  chooseDay(d, optimisticScroll) {\n    const day = parseDate(d);\n\n    this.setState({\n      calendarScrollable: false,\n      selectedDay: day.clone()\n    });\n\n    _.invoke(this.props, 'onCalendarToggled', false);\n\n    if (!optimisticScroll) {\n      this.setState({\n        topDay: day.clone()\n      });\n    }\n\n    this.setScrollPadPosition(this.initialScrollPadPosition(), true);\n    this.calendar.scrollToDay(day, this.calendarOffset(), true);\n\n    _.invoke(this.props, 'loadItemsForMonth', xdateToData(day));\n    _.invoke(this.props, 'onDayPress', xdateToData(day));\n  }\n\n  generateMarkings = memoize((selectedDay, markedDates, items = {}) => {\n    if (!markedDates) {\n      markedDates = {};\n      Object.keys(items).forEach(key => {\n        if (items[key] && items[key].length) {\n          markedDates[key] = {marked: true};\n        }\n      });\n    }\n\n    const key = toMarkingFormat(selectedDay);\n    return {...markedDates, [key]: {...(markedDates[key] || {}), ...{selected: true}}};\n  });\n\n  onScrollPadLayout = () => {\n    // When user touches knob, the actual component that receives touch events is a ScrollView.\n    // It needs to be scrolled to the bottom, so that when user moves finger downwards,\n    // scroll position actually changes (it would stay at 0, when scrolled to the top).\n    this.setScrollPadPosition(this.initialScrollPadPosition(), false);\n    // delay rendering calendar in full height because otherwise it still flickers sometimes\n    setTimeout(() => this.setState({calendarIsReady: true}), 0);\n  };\n\n  onCalendarListLayout = () => {\n    this.calendar.scrollToDay(this.state.selectedDay.clone(), this.calendarOffset(), false);\n  };\n\n  onLayout = event => {\n    this.viewHeight = event.nativeEvent.layout.height;\n    this.viewWidth = event.nativeEvent.layout.width;\n    this.forceUpdate();\n  };\n\n  onTouchStart = () => {\n    this.headerState = 'touched';\n    if (this.knob) {\n      this.knob.setNativeProps({style: {opacity: 0.5}});\n    }\n  };\n\n  onTouchEnd = () => {\n    if (this.knob) {\n      this.knob.setNativeProps({style: {opacity: 1}});\n    }\n\n    if (this.headerState === 'touched') {\n      const isOpen = this.state.calendarScrollable;\n      this.toggleCalendarPosition(!isOpen);\n    }\n\n    this.headerState = 'idle';\n  };\n\n  onStartDrag = () => {\n    this.headerState = 'dragged';\n    this.knobTracker.reset();\n  };\n\n  onSnapAfterDrag = e => {\n    // on Android onTouchEnd is not called if dragging was started\n    this.onTouchEnd();\n    const currentY = e.nativeEvent.contentOffset.y;\n    this.knobTracker.add(currentY);\n    const projectedY = currentY + this.knobTracker.estimateSpeed() * 250; /*ms*/\n    const maxY = this.initialScrollPadPosition();\n    const snapY = projectedY > maxY / 2 ? maxY : 0;\n    this.setScrollPadPosition(snapY, true);\n\n    this.enableCalendarScrolling(snapY === 0);\n  };\n\n  onVisibleMonthsChange = months => {\n    _.invoke(this.props, 'onVisibleMonthsChange', months);\n\n    if (this.props.items && !this.state.firstReservationLoad) {\n      clearTimeout(this.scrollTimeout);\n\n      this.scrollTimeout = setTimeout(() => {\n        if (this._isMounted) {\n          _.invoke(this.props, 'loadItemsForMonth', months[0]);\n        }\n      }, 200);\n    }\n  };\n\n  onDayChange = day => {\n    const newDate = parseDate(day);\n    const withAnimation = dateutils.sameMonth(newDate, this.state.selectedDay);\n\n    this.calendar.scrollToDay(day, this.calendarOffset(), withAnimation);\n    this.setState({\n      selectedDay: newDate\n    });\n\n    _.invoke(this.props, 'onDayChange', xdateToData(newDate));\n  };\n\n  renderReservations() {\n    const reservationListProps = extractComponentProps(ReservationList, this.props);\n\n    return (\n      <ReservationList\n        {...reservationListProps}\n        ref={c => (this.list = c)}\n        reservations={this.props.items}\n        selectedDay={this.state.selectedDay}\n        topDay={this.state.topDay}\n        onDayChange={this.onDayChange}\n        onScroll={() => {}}\n      />\n    );\n  }\n\n  renderCalendarList() {\n    const {markedDates, items} = this.props;\n    const shouldHideExtraDays = this.state.calendarScrollable ? this.props.hideExtraDays : false;\n    const calendarListProps = extractComponentProps(CalendarList, this.props);\n\n    return (\n      <CalendarList\n        {...calendarListProps}\n        ref={c => (this.calendar = c)}\n        current={this.currentMonth}\n        markedDates={this.generateMarkings(this.state.selectedDay, markedDates, items)}\n        calendarWidth={this.viewWidth}\n        scrollEnabled={this.state.calendarScrollable}\n        hideExtraDays={shouldHideExtraDays}\n        onLayout={this.onCalendarListLayout}\n        onDayPress={this.chooseDayFromCalendar}\n        onVisibleMonthsChange={this.onVisibleMonthsChange}\n      />\n    );\n  }\n\n  renderKnob() {\n    const {showClosingKnob, hideKnob, renderKnob} = this.props;\n    let knob = <View style={this.style.knobContainer} />;\n\n    if (!hideKnob) {\n      const knobView = renderKnob ? renderKnob() : <View style={this.style.knob} />;\n      knob = !this.state.calendarScrollable || showClosingKnob ? (\n        <View style={this.style.knobContainer}>\n          <View ref={c => (this.knob = c)}>{knobView}</View>\n        </View>\n      ) : null;\n    }\n    return knob;\n  }\n\n  renderWeekDaysNames = memoize(weekDaysNames => {\n    return weekDaysNames.map((day, index) => (\n      <Text allowFontScaling={false} key={day + index} style={this.style.weekday} numberOfLines={1}>\n        {day}\n      </Text>\n    ));\n  });\n\n  renderWeekNumbersSpace = () => {\n    return this.props.showWeekNumbers && <View allowFontScaling={false} style={this.style.weekday} numberOfLines={1} />;\n  };\n\n  render() {\n    const {firstDay, hideKnob, style, testID} = this.props;\n    const weekDaysNames = dateutils.weekDayNames(firstDay);\n    const agendaHeight = this.initialScrollPadPosition();\n    const weekdaysStyle = [\n      this.style.weekdays,\n      {\n        opacity: this.state.scrollY.interpolate({\n          inputRange: [agendaHeight - HEADER_HEIGHT, agendaHeight],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        }),\n        transform: [\n          {\n            translateY: this.state.scrollY.interpolate({\n              inputRange: [Math.max(0, agendaHeight - HEADER_HEIGHT), agendaHeight],\n              outputRange: [-HEADER_HEIGHT, 0],\n              extrapolate: 'clamp'\n            })\n          }\n        ]\n      }\n    ];\n    const headerTranslate = this.state.scrollY.interpolate({\n      inputRange: [0, agendaHeight],\n      outputRange: [agendaHeight, 0],\n      extrapolate: 'clamp'\n    });\n    const contentTranslate = this.state.scrollY.interpolate({\n      inputRange: [0, agendaHeight],\n      outputRange: [0, agendaHeight / 2],\n      extrapolate: 'clamp'\n    });\n    const headerStyle = [\n      this.style.header,\n      {\n        bottom: agendaHeight,\n        transform: [{translateY: headerTranslate}]\n      }\n    ];\n\n    if (!this.state.calendarIsReady) {\n      // limit header height until everything is setup for calendar dragging\n      headerStyle.push({height: 0});\n      // fill header with appStyle.calendarBackground background to reduce flickering\n      weekdaysStyle.push({height: HEADER_HEIGHT});\n    }\n\n    const openCalendarScrollPadPosition = !hideKnob && this.state.calendarScrollable && this.props.showClosingKnob ? agendaHeight + HEADER_HEIGHT : 0;\n    const shouldAllowDragging = !hideKnob && !this.state.calendarScrollable;\n    const scrollPadPosition = (shouldAllowDragging ? HEADER_HEIGHT : openCalendarScrollPadPosition) - KNOB_HEIGHT;\n    const scrollPadStyle = {\n      position: 'absolute',\n      width: 80,\n      height: KNOB_HEIGHT,\n      top: scrollPadPosition,\n      left: (this.viewWidth - 80) / 2\n    };\n\n    return (\n      <View testID={testID} onLayout={this.onLayout} style={[style, this.style.container]}>\n        <View style={this.style.reservations}>{this.renderReservations()}</View>\n        <Animated.View style={headerStyle}>\n          <Animated.View style={[this.style.animatedContainer, {transform: [{translateY: contentTranslate}]}]}>\n            {this.renderCalendarList()}\n          </Animated.View>\n          {this.renderKnob()}\n        </Animated.View>\n        <Animated.View style={weekdaysStyle}>\n          {this.renderWeekNumbersSpace()}\n          {this.renderWeekDaysNames(weekDaysNames)}\n        </Animated.View>\n        <Animated.ScrollView\n          ref={ref => (this.scrollPad = ref)}\n          style={scrollPadStyle}\n          overScrollMode=\"never\"\n          showsHorizontalScrollIndicator={false}\n          showsVerticalScrollIndicator={false}\n          scrollEventThrottle={8}\n          scrollsToTop={false}\n          onTouchStart={this.onTouchStart}\n          onTouchEnd={this.onTouchEnd}\n          onScrollBeginDrag={this.onStartDrag}\n          onScrollEndDrag={this.onSnapAfterDrag}\n          onScroll={Animated.event([{nativeEvent: {contentOffset: {y: this.state.scrollY}}}], {useNativeDriver: true})}\n        >\n          <View\n            testID={AGENDA_CALENDAR_KNOB}\n            style={{height: agendaHeight + KNOB_HEIGHT}}\n            onLayout={this.onScrollPadLayout}\n          />\n        </Animated.ScrollView>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}