{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/kw/LocalDev/efficiently-app/node_modules/react-native-calendars/src/calendar/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport memoize from 'memoize-one';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\nimport dateutils from \"../dateutils\";\nimport { xdateToData, parseDate, toMarkingFormat } from \"../interface\";\nimport { getState } from \"../day-state-manager\";\nimport { extractComponentProps } from \"../component-updater\";\nimport { WEEK_NUMBER } from \"../testIDs\";\nimport styleConstructor from \"./style\";\nimport CalendarHeader from \"./header\";\nimport BasicDay from \"./day/basic\";\nimport Day from \"./day/index\";\n\nvar Calendar = function (_Component) {\n  _inherits(Calendar, _Component);\n\n  var _super = _createSuper(Calendar);\n\n  function Calendar(props) {\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    _this = _super.call(this, props);\n\n    _this.addMonth = function (count) {\n      _this.updateMonth(_this.state.currentMonth.clone().addMonths(count, true));\n    };\n\n    _this.updateMonth = function (day, doNotTriggerListeners) {\n      if (day.toString('yyyy MM') === _this.state.currentMonth.toString('yyyy MM')) {\n        return;\n      }\n\n      _this.setState({\n        currentMonth: day.clone()\n      }, function () {\n        if (!doNotTriggerListeners) {\n          var currMont = _this.state.currentMonth.clone();\n\n          _.invoke(_this.props, 'onMonthChange', xdateToData(currMont));\n\n          _.invoke(_this.props, 'onVisibleMonthsChange', [xdateToData(currMont)]);\n        }\n      });\n    };\n\n    _this.pressDay = function (date) {\n      _this.handleDayInteraction(date, _this.props.onDayPress);\n    };\n\n    _this.longPressDay = function (date) {\n      _this.handleDayInteraction(date, _this.props.onDayLongPress);\n    };\n\n    _this.swipeProps = {\n      onSwipe: function onSwipe(direction, state) {\n        return _this.onSwipe(direction, state);\n      }\n    };\n\n    _this.onSwipe = function (gestureName) {\n      var SWIPE_UP = swipeDirections.SWIPE_UP,\n          SWIPE_DOWN = swipeDirections.SWIPE_DOWN,\n          SWIPE_LEFT = swipeDirections.SWIPE_LEFT,\n          SWIPE_RIGHT = swipeDirections.SWIPE_RIGHT;\n\n      switch (gestureName) {\n        case SWIPE_UP:\n        case SWIPE_DOWN:\n          break;\n\n        case SWIPE_LEFT:\n          _this.onSwipeLeft();\n\n          break;\n\n        case SWIPE_RIGHT:\n          _this.onSwipeRight();\n\n          break;\n      }\n    };\n\n    _this.onSwipeLeft = function () {\n      _this.header.onPressRight();\n    };\n\n    _this.onSwipeRight = function () {\n      _this.header.onPressLeft();\n    };\n\n    _this.renderWeekNumber = memoize(function (weekNumber) {\n      return React.createElement(View, {\n        style: _this.style.dayContainer,\n        key: \"week-container-\" + weekNumber,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 7\n        }\n      }, React.createElement(BasicDay, {\n        key: \"week-\" + weekNumber,\n        marking: {\n          disabled: true,\n          disableTouchEvent: true\n        },\n        theme: _this.props.theme,\n        testID: WEEK_NUMBER + \"-\" + weekNumber,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }\n      }, weekNumber));\n    });\n    _this.style = styleConstructor(props.theme);\n    _this.state = {\n      currentMonth: props.current ? parseDate(props.current) : XDate()\n    };\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"handleDayInteraction\",\n    value: function handleDayInteraction(date, interaction) {\n      var disableMonthChange = this.props.disableMonthChange;\n      var day = parseDate(date);\n      var minDate = parseDate(this.props.minDate);\n      var maxDate = parseDate(this.props.maxDate);\n\n      if (!(minDate && !dateutils.isGTE(day, minDate)) && !(maxDate && !dateutils.isLTE(day, maxDate))) {\n        var shouldUpdateMonth = disableMonthChange === undefined || !disableMonthChange;\n\n        if (shouldUpdateMonth) {\n          this.updateMonth(day);\n        }\n\n        if (interaction) {\n          interaction(xdateToData(day));\n        }\n      }\n    }\n  }, {\n    key: \"renderDay\",\n    value: function renderDay(day, id) {\n      var _this$props = this.props,\n          hideExtraDays = _this$props.hideExtraDays,\n          markedDates = _this$props.markedDates;\n      var dayProps = extractComponentProps(Day, this.props);\n\n      if (!dateutils.sameMonth(day, this.state.currentMonth) && hideExtraDays) {\n        return React.createElement(View, {\n          key: id,\n          style: this.style.emptyDayContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return React.createElement(View, {\n        style: this.style.dayContainer,\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 7\n        }\n      }, React.createElement(Day, _extends({}, dayProps, {\n        day: day,\n        state: getState(day, this.state.currentMonth, this.props),\n        marking: markedDates == null ? void 0 : markedDates[toMarkingFormat(day)],\n        onPress: this.pressDay,\n        onLongPress: this.longPressDay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }\n      })));\n    }\n  }, {\n    key: \"renderWeek\",\n    value: function renderWeek(days, id) {\n      var _this2 = this;\n\n      var week = [];\n      days.forEach(function (day, id2) {\n        week.push(_this2.renderDay(day, id2));\n      }, this);\n\n      if (this.props.showWeekNumbers) {\n        week.unshift(this.renderWeekNumber(days[days.length - 1].getWeek()));\n      }\n\n      return React.createElement(View, {\n        style: this.style.week,\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 7\n        }\n      }, week);\n    }\n  }, {\n    key: \"renderMonth\",\n    value: function renderMonth() {\n      var currentMonth = this.state.currentMonth;\n      var _this$props2 = this.props,\n          firstDay = _this$props2.firstDay,\n          showSixWeeks = _this$props2.showSixWeeks,\n          hideExtraDays = _this$props2.hideExtraDays;\n      var shouldShowSixWeeks = showSixWeeks && !hideExtraDays;\n      var days = dateutils.page(currentMonth, firstDay, shouldShowSixWeeks);\n      var weeks = [];\n\n      while (days.length) {\n        weeks.push(this.renderWeek(days.splice(0, 7), weeks.length));\n      }\n\n      return React.createElement(View, {\n        style: this.style.monthView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 12\n        }\n      }, weeks);\n    }\n  }, {\n    key: \"renderHeader\",\n    value: function renderHeader() {\n      var _this3 = this;\n\n      var _this$props3 = this.props,\n          customHeader = _this$props3.customHeader,\n          headerStyle = _this$props3.headerStyle,\n          displayLoadingIndicator = _this$props3.displayLoadingIndicator,\n          markedDates = _this$props3.markedDates,\n          testID = _this$props3.testID;\n      var current = parseDate(this.props.current);\n      var indicator;\n\n      if (current) {\n        var lastMonthOfDay = toMarkingFormat(current.clone().addMonths(1, true).setDate(1).addDays(-1));\n\n        if (displayLoadingIndicator && !(markedDates && markedDates[lastMonthOfDay])) {\n          indicator = true;\n        }\n      }\n\n      var headerProps = extractComponentProps(CalendarHeader, this.props);\n      var CustomHeader = customHeader;\n      var HeaderComponent = customHeader ? CustomHeader : CalendarHeader;\n      return React.createElement(HeaderComponent, _extends({}, headerProps, {\n        testID: testID,\n        style: headerStyle,\n        ref: function ref(r) {\n          return _this3.header = r;\n        },\n        month: this.state.currentMonth,\n        addMonth: this.addMonth,\n        displayLoadingIndicator: indicator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 7\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          enableSwipeMonths = _this$props4.enableSwipeMonths,\n          style = _this$props4.style;\n      var GestureComponent = enableSwipeMonths ? GestureRecognizer : View;\n      var gestureProps = enableSwipeMonths ? this.swipeProps : undefined;\n      return React.createElement(GestureComponent, _extends({}, gestureProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 7\n        }\n      }), React.createElement(View, {\n        style: [this.style.container, style],\n        accessibilityElementsHidden: this.props.accessibilityElementsHidden,\n        importantForAccessibility: this.props.importantForAccessibility,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 9\n        }\n      }, this.renderHeader(), this.renderMonth()));\n    }\n  }]);\n\n  return Calendar;\n}(Component);\n\nCalendar.displayName = 'Calendar';\nCalendar.propTypes = _objectSpread(_objectSpread(_objectSpread({}, CalendarHeader.propTypes), Day.propTypes), {}, {\n  theme: PropTypes.object,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n  current: PropTypes.any,\n  minDate: PropTypes.any,\n  maxDate: PropTypes.any,\n  firstDay: PropTypes.number,\n  markedDates: PropTypes.object,\n  displayLoadingIndicator: PropTypes.bool,\n  showWeekNumbers: PropTypes.bool,\n  hideExtraDays: PropTypes.bool,\n  showSixWeeks: PropTypes.bool,\n  onDayPress: PropTypes.func,\n  onDayLongPress: PropTypes.func,\n  onMonthChange: PropTypes.func,\n  onVisibleMonthsChange: PropTypes.func,\n  disableMonthChange: PropTypes.bool,\n  enableSwipeMonths: PropTypes.bool,\n  disabledByDefault: PropTypes.bool,\n  headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  customHeader: PropTypes.any\n});\nCalendar.defaultProps = {\n  enableSwipeMonths: false\n};\nexport default Calendar;","map":{"version":3,"sources":["/Users/kw/LocalDev/efficiently-app/node_modules/react-native-calendars/src/calendar/index.js"],"names":["_","PropTypes","XDate","memoize","React","Component","GestureRecognizer","swipeDirections","dateutils","xdateToData","parseDate","toMarkingFormat","getState","extractComponentProps","WEEK_NUMBER","styleConstructor","CalendarHeader","BasicDay","Day","Calendar","props","addMonth","count","updateMonth","state","currentMonth","clone","addMonths","day","doNotTriggerListeners","toString","setState","currMont","invoke","pressDay","date","handleDayInteraction","onDayPress","longPressDay","onDayLongPress","swipeProps","onSwipe","direction","gestureName","SWIPE_UP","SWIPE_DOWN","SWIPE_LEFT","SWIPE_RIGHT","onSwipeLeft","onSwipeRight","header","onPressRight","onPressLeft","renderWeekNumber","weekNumber","style","dayContainer","disabled","disableTouchEvent","theme","current","interaction","disableMonthChange","minDate","maxDate","isGTE","isLTE","shouldUpdateMonth","undefined","id","hideExtraDays","markedDates","dayProps","sameMonth","emptyDayContainer","days","week","forEach","id2","push","renderDay","showWeekNumbers","unshift","length","getWeek","firstDay","showSixWeeks","shouldShowSixWeeks","page","weeks","renderWeek","splice","monthView","customHeader","headerStyle","displayLoadingIndicator","testID","indicator","lastMonthOfDay","setDate","addDays","headerProps","CustomHeader","HeaderComponent","r","enableSwipeMonths","GestureComponent","View","gestureProps","container","accessibilityElementsHidden","importantForAccessibility","renderHeader","renderMonth","displayName","propTypes","object","oneOfType","array","number","any","bool","func","onMonthChange","onVisibleMonthsChange","disabledByDefault","defaultProps"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport memoize from 'memoize-one';\n\nimport React, {Component} from 'react';\nimport {View} from 'react-native';\nimport GestureRecognizer, {swipeDirections} from 'react-native-swipe-gestures';\n\nimport dateutils from '../dateutils';\nimport {xdateToData, parseDate, toMarkingFormat} from '../interface';\nimport {getState} from '../day-state-manager';\n// import shouldComponentUpdate from './updater';\nimport {extractComponentProps} from '../component-updater';\nimport {WEEK_NUMBER} from '../testIDs';\nimport styleConstructor from './style';\nimport CalendarHeader from './header';\nimport BasicDay from './day/basic';\nimport Day from './day/index';\n\n/**\n * @description: Calendar component\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendars.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/calendar.gif\n */\nclass Calendar extends Component {\n  static displayName = 'Calendar';\n\n  static propTypes = {\n    ...CalendarHeader.propTypes,\n    ...Day.propTypes,\n    /** Specify theme properties to override specific styles for calendar parts. Default = {} */\n    theme: PropTypes.object,\n    /** Specify style for calendar container element. Default = {} */\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n    /** Initially visible month. Default = Date() */\n    current: PropTypes.any,\n    /** Minimum date that can be selected, dates before minDate will be grayed out. Default = undefined */\n    minDate: PropTypes.any,\n    /** Maximum date that can be selected, dates after maxDate will be grayed out. Default = undefined */\n    maxDate: PropTypes.any,\n    /** If firstDay=1 week starts from Monday. Note that dayNames and dayNamesShort should still start from Sunday. */\n    firstDay: PropTypes.number,\n    /** Collection of dates that have to be marked. Default = {} */\n    markedDates: PropTypes.object,\n    /** Display loading indicator. Default = false */\n    displayLoadingIndicator: PropTypes.bool,\n    /** Show week numbers. Default = false */\n    showWeekNumbers: PropTypes.bool,\n    /** Do not show days of other months in month page. Default = false */\n    hideExtraDays: PropTypes.bool,\n    /** Always show six weeks on each month (only when hideExtraDays = false). Default = false */\n    showSixWeeks: PropTypes.bool,\n    /** Handler which gets executed on day press. Default = undefined */\n    onDayPress: PropTypes.func,\n    /** Handler which gets executed on day long press. Default = undefined */\n    onDayLongPress: PropTypes.func,\n    /** Handler which gets executed when month changes in calendar. Default = undefined */\n    onMonthChange: PropTypes.func,\n    /** Handler which gets executed when visible month changes in calendar. Default = undefined */\n    onVisibleMonthsChange: PropTypes.func,\n    /** Disables changing month when click on days of other months (when hideExtraDays is false). Default = false */\n    disableMonthChange: PropTypes.bool,\n    /** Enable the option to swipe between months. Default: false */\n    enableSwipeMonths: PropTypes.bool,\n    /** Disable days by default. Default = false */\n    disabledByDefault: PropTypes.bool,\n    /** Style passed to the header */\n    headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /** Allow rendering of a totally custom header */\n    customHeader: PropTypes.any\n  };\n\n  static defaultProps = {\n    enableSwipeMonths: false\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.style = styleConstructor(props.theme);\n\n    this.state = {\n      currentMonth: props.current ? parseDate(props.current) : XDate()\n    };\n\n    // this.shouldComponentUpdate = shouldComponentUpdate;\n  }\n\n  addMonth = count => {\n    this.updateMonth(this.state.currentMonth.clone().addMonths(count, true));\n  };\n\n  updateMonth = (day, doNotTriggerListeners) => {\n    if (day.toString('yyyy MM') === this.state.currentMonth.toString('yyyy MM')) {\n      return;\n    }\n\n    this.setState({currentMonth: day.clone()}, () => {\n      if (!doNotTriggerListeners) {\n        const currMont = this.state.currentMonth.clone();\n        _.invoke(this.props, 'onMonthChange', xdateToData(currMont));\n        _.invoke(this.props, 'onVisibleMonthsChange', [xdateToData(currMont)]);\n      }\n    });\n  };\n\n  handleDayInteraction(date, interaction) {\n    const {disableMonthChange} = this.props;\n    const day = parseDate(date);\n    const minDate = parseDate(this.props.minDate);\n    const maxDate = parseDate(this.props.maxDate);\n\n    if (!(minDate && !dateutils.isGTE(day, minDate)) && !(maxDate && !dateutils.isLTE(day, maxDate))) {\n      const shouldUpdateMonth = disableMonthChange === undefined || !disableMonthChange;\n\n      if (shouldUpdateMonth) {\n        this.updateMonth(day);\n      }\n      if (interaction) {\n        interaction(xdateToData(day));\n      }\n    }\n  }\n\n  pressDay = date => {\n    this.handleDayInteraction(date, this.props.onDayPress);\n  };\n\n  longPressDay = date => {\n    this.handleDayInteraction(date, this.props.onDayLongPress);\n  };\n\n  swipeProps = {onSwipe: (direction, state) => this.onSwipe(direction, state)};\n\n  onSwipe = gestureName => {\n    const {SWIPE_UP, SWIPE_DOWN, SWIPE_LEFT, SWIPE_RIGHT} = swipeDirections;\n\n    switch (gestureName) {\n      case SWIPE_UP:\n      case SWIPE_DOWN:\n        break;\n      case SWIPE_LEFT:\n        this.onSwipeLeft();\n        break;\n      case SWIPE_RIGHT:\n        this.onSwipeRight();\n        break;\n    }\n  };\n\n  onSwipeLeft = () => {\n    this.header.onPressRight();\n  };\n\n  onSwipeRight = () => {\n    this.header.onPressLeft();\n  };\n\n  renderWeekNumber = memoize(weekNumber => {\n    return (\n      <View style={this.style.dayContainer} key={`week-container-${weekNumber}`}>\n        <BasicDay\n          key={`week-${weekNumber}`}\n          marking={{disabled: true, disableTouchEvent: true}}\n          // state='disabled'\n          theme={this.props.theme}\n          testID={`${WEEK_NUMBER}-${weekNumber}`}\n        >\n          {weekNumber}\n        </BasicDay>\n      </View>\n    );\n  });\n\n  renderDay(day, id) {\n    const {hideExtraDays, markedDates} = this.props;\n    const dayProps = extractComponentProps(Day, this.props);\n\n    if (!dateutils.sameMonth(day, this.state.currentMonth) && hideExtraDays) {\n      return <View key={id} style={this.style.emptyDayContainer} />;\n    }\n\n    return (\n      <View style={this.style.dayContainer} key={id}>\n        <Day\n          {...dayProps}\n          day={day}\n          state={getState(day, this.state.currentMonth, this.props)}\n          marking={markedDates?.[toMarkingFormat(day)]}\n          onPress={this.pressDay}\n          onLongPress={this.longPressDay}\n        />\n      </View>\n    );\n  }\n\n  renderWeek(days, id) {\n    const week = [];\n\n    days.forEach((day, id2) => {\n      week.push(this.renderDay(day, id2));\n    }, this);\n\n    if (this.props.showWeekNumbers) {\n      week.unshift(this.renderWeekNumber(days[days.length - 1].getWeek()));\n    }\n\n    return (\n      <View style={this.style.week} key={id}>\n        {week}\n      </View>\n    );\n  }\n\n  renderMonth() {\n    const {currentMonth} = this.state;\n    const {firstDay, showSixWeeks, hideExtraDays} = this.props;\n    const shouldShowSixWeeks = showSixWeeks && !hideExtraDays;\n    const days = dateutils.page(currentMonth, firstDay, shouldShowSixWeeks);\n    const weeks = [];\n\n    while (days.length) {\n      weeks.push(this.renderWeek(days.splice(0, 7), weeks.length));\n    }\n\n    return <View style={this.style.monthView}>{weeks}</View>;\n  }\n\n  renderHeader() {\n    const {customHeader, headerStyle, displayLoadingIndicator, markedDates, testID} = this.props;\n    const current = parseDate(this.props.current);\n    let indicator;\n\n    if (current) {\n      const lastMonthOfDay = toMarkingFormat(current.clone().addMonths(1, true).setDate(1).addDays(-1));\n      if (displayLoadingIndicator && !(markedDates && markedDates[lastMonthOfDay])) {\n        indicator = true;\n      }\n    }\n\n    const headerProps = extractComponentProps(CalendarHeader, this.props);\n    const CustomHeader = customHeader;\n    const HeaderComponent = customHeader ? CustomHeader : CalendarHeader;\n\n    return (\n      <HeaderComponent\n        {...headerProps}\n        testID={testID}\n        style={headerStyle}\n        ref={r => (this.header = r)}\n        month={this.state.currentMonth}\n        addMonth={this.addMonth}\n        displayLoadingIndicator={indicator}\n      />\n    );\n  }\n\n  render() {\n    const {enableSwipeMonths, style} = this.props;\n    const GestureComponent = enableSwipeMonths ? GestureRecognizer : View;\n    const gestureProps = enableSwipeMonths ? this.swipeProps : undefined;\n\n    return (\n      <GestureComponent {...gestureProps}>\n        <View\n          style={[this.style.container, style]}\n          accessibilityElementsHidden={this.props.accessibilityElementsHidden} // iOS\n          importantForAccessibility={this.props.importantForAccessibility} // Android\n        >\n          {this.renderHeader()}\n          {this.renderMonth()}\n        </View>\n      </GestureComponent>\n    );\n  }\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}