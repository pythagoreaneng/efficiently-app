{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\NASSER\\\\Desktop\\\\efficiently\\\\app\\\\node_modules\\\\react-native-calendars\\\\src\\\\expandableCalendar\\\\Context\\\\Provider.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport styleConstructor from \"../style\";\nimport CalendarContext from '.';\nimport Presenter from \"./Presenter\";\nimport { toMarkingFormat } from \"../../interface\";\n\nvar commons = require(\"../commons\");\n\nvar UPDATE_SOURCES = commons.UPDATE_SOURCES;\nvar TOP_POSITION = 65;\n\nvar CalendarProvider = function (_Component) {\n  _inherits(CalendarProvider, _Component);\n\n  var _super = _createSuper(CalendarProvider);\n\n  function CalendarProvider(props) {\n    var _this;\n\n    _classCallCheck(this, CalendarProvider);\n\n    _this = _super.call(this, props);\n\n    _this.getProviderContextValue = function () {\n      return {\n        setDate: _this.setDate,\n        date: _this.state.date,\n        prevDate: _this.state.prevDate,\n        updateSource: _this.state.updateSource,\n        setDisabled: _this.setDisabled\n      };\n    };\n\n    _this.setDate = function (date, updateSource) {\n      var setDate = _this.presenter.setDate;\n\n      var updateState = function updateState(buttonIcon) {\n        _this.setState({\n          date: date,\n          prevDate: _this.state.date,\n          updateSource: updateSource,\n          buttonIcon: buttonIcon\n        }, function () {\n          _this.animateTodayButton(date);\n        });\n      };\n\n      setDate(_this.props, date, _this.state.date, updateState, updateSource);\n    };\n\n    _this.setDisabled = function (disabled) {\n      var setDisabled = _this.presenter.setDisabled;\n      var showTodayButton = _this.props.showTodayButton;\n\n      var updateState = function updateState(disabled) {\n        _this.setState({\n          disabled: disabled\n        });\n\n        _this.animateOpacity(disabled);\n      };\n\n      setDisabled(showTodayButton, disabled, _this.state.disabled, updateState);\n    };\n\n    _this.onTodayPress = function () {\n      var today = _this.presenter.getTodayDate();\n\n      _this.setDate(today, UPDATE_SOURCES.TODAY_PRESS);\n    };\n\n    _this.style = styleConstructor(props.theme);\n    _this.presenter = new Presenter();\n    var _showTodayButton = props.showTodayButton;\n    _this.state = {\n      prevDate: _this.props.date || toMarkingFormat(XDate()),\n      date: _this.props.date || toMarkingFormat(XDate()),\n      updateSource: UPDATE_SOURCES.CALENDAR_INIT,\n      buttonY: new Animated.Value(-props.todayBottomMargin || -TOP_POSITION),\n      buttonIcon: _this.presenter.getButtonIcon(props.date, _showTodayButton),\n      disabled: false,\n      opacity: new Animated.Value(1)\n    };\n    return _this;\n  }\n\n  _createClass(CalendarProvider, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.date !== this.props.date) {\n        this.setDate(this.props.date, UPDATE_SOURCES.PROP_UPDATE);\n      }\n    }\n  }, {\n    key: \"animateTodayButton\",\n    value: function animateTodayButton(date) {\n      var _this$presenter = this.presenter,\n          shouldAnimateTodayButton = _this$presenter.shouldAnimateTodayButton,\n          getPositionAnimation = _this$presenter.getPositionAnimation;\n\n      if (shouldAnimateTodayButton(this.props)) {\n        var animationData = getPositionAnimation(date, this.props.todayBottomMargin);\n        Animated.spring(this.state.buttonY, _objectSpread({}, animationData)).start();\n      }\n    }\n  }, {\n    key: \"animateOpacity\",\n    value: function animateOpacity(disabled) {\n      var _this$presenter2 = this.presenter,\n          shouldAnimateOpacity = _this$presenter2.shouldAnimateOpacity,\n          getOpacityAnimation = _this$presenter2.getOpacityAnimation;\n\n      if (shouldAnimateOpacity(this.props)) {\n        var animationData = getOpacityAnimation(this.props, disabled);\n        Animated.timing(this.state.opacity, _objectSpread({}, animationData)).start();\n      }\n    }\n  }, {\n    key: \"renderTodayButton\",\n    value: function renderTodayButton() {\n      var _this$state = this.state,\n          disabled = _this$state.disabled,\n          opacity = _this$state.opacity,\n          buttonY = _this$state.buttonY,\n          buttonIcon = _this$state.buttonIcon;\n      var getTodayFormatted = this.presenter.getTodayFormatted;\n      var today = getTodayFormatted();\n      return React.createElement(Animated.View, {\n        style: [this.style.todayButtonContainer, {\n          transform: [{\n            translateY: buttonY\n          }]\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: [this.style.todayButton, this.props.todayButtonStyle],\n        onPress: this.onTodayPress,\n        disabled: disabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.Image, {\n        style: [this.style.todayButtonImage, {\n          opacity: opacity\n        }],\n        source: buttonIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      }), React.createElement(Animated.Text, {\n        allowFontScaling: false,\n        style: [this.style.todayButtonText, {\n          opacity: opacity\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }\n      }, today)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CalendarContext.Provider, {\n        value: this.getProviderContextValue(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [styles.container, this.props.style],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }, this.props.children), this.props.showTodayButton && this.renderTodayButton());\n    }\n  }]);\n\n  return CalendarProvider;\n}(Component);\n\nCalendarProvider.displayName = 'CalendarProvider';\nCalendarProvider.propTypes = {\n  date: PropTypes.any.isRequired,\n  onDateChanged: PropTypes.func,\n  onMonthChange: PropTypes.func,\n  showTodayButton: PropTypes.bool,\n  todayBottomMargin: PropTypes.number,\n  todayButtonStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  disabledOpacity: PropTypes.number\n};\nexport default CalendarProvider;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/NASSER/Desktop/efficiently/app/node_modules/react-native-calendars/src/expandableCalendar/Context/Provider.js"],"names":["React","Component","PropTypes","XDate","styleConstructor","CalendarContext","Presenter","toMarkingFormat","commons","require","UPDATE_SOURCES","TOP_POSITION","CalendarProvider","props","getProviderContextValue","setDate","date","state","prevDate","updateSource","setDisabled","presenter","updateState","buttonIcon","setState","animateTodayButton","disabled","showTodayButton","animateOpacity","onTodayPress","today","getTodayDate","TODAY_PRESS","style","theme","CALENDAR_INIT","buttonY","Animated","Value","todayBottomMargin","getButtonIcon","opacity","prevProps","PROP_UPDATE","shouldAnimateTodayButton","getPositionAnimation","animationData","spring","start","shouldAnimateOpacity","getOpacityAnimation","timing","getTodayFormatted","todayButtonContainer","transform","translateY","todayButton","todayButtonStyle","todayButtonImage","todayButtonText","styles","container","children","renderTodayButton","displayName","propTypes","any","isRequired","onDateChanged","func","onMonthChange","bool","number","oneOfType","object","array","disabledOpacity","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {StyleSheet, Animated, TouchableOpacity, View} from 'react-native';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport styleConstructor from '../style';\nimport CalendarContext from '.';\nimport Presenter from './Presenter';\nimport {toMarkingFormat} from '../../interface';\n\nconst commons = require('../commons');\nconst UPDATE_SOURCES = commons.UPDATE_SOURCES;\nconst TOP_POSITION = 65;\n\n/**\n * @description: Calendar context provider component\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/expandableCalendar.js\n */\nclass CalendarProvider extends Component {\n  static displayName = 'CalendarProvider';\n\n  static propTypes = {\n    /** Initial date in 'yyyy-MM-dd' format. Default = Date() */\n    date: PropTypes.any.isRequired,\n    /** Callback for date change event */\n    onDateChanged: PropTypes.func,\n    /** Callback for month change event */\n    onMonthChange: PropTypes.func,\n    /** Whether to show the today button */\n    showTodayButton: PropTypes.bool,\n    /** Today button's top position */\n    todayBottomMargin: PropTypes.number,\n    /** Today button's style */\n    todayButtonStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /** The opacity for the disabled today button (0-1) */\n    disabledOpacity: PropTypes.number\n  };\n\n  constructor(props) {\n    super(props);\n    this.style = styleConstructor(props.theme);\n    this.presenter = new Presenter();\n    const {showTodayButton} = props;\n\n    this.state = {\n      prevDate: this.props.date || toMarkingFormat(XDate()),\n      date: this.props.date || toMarkingFormat(XDate()),\n      updateSource: UPDATE_SOURCES.CALENDAR_INIT,\n      buttonY: new Animated.Value(-props.todayBottomMargin || -TOP_POSITION),\n      buttonIcon: this.presenter.getButtonIcon(props.date, showTodayButton),\n      disabled: false,\n      opacity: new Animated.Value(1)\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.date !== this.props.date) {\n      this.setDate(this.props.date, UPDATE_SOURCES.PROP_UPDATE);\n    }\n  }\n\n  getProviderContextValue = () => {\n    return {\n      setDate: this.setDate,\n      date: this.state.date,\n      prevDate: this.state.prevDate,\n      updateSource: this.state.updateSource,\n      setDisabled: this.setDisabled\n    };\n  };\n\n  setDate = (date, updateSource) => {\n    const {setDate} = this.presenter;\n\n    const updateState = buttonIcon => {\n      this.setState({date, prevDate: this.state.date, updateSource, buttonIcon}, () => {\n        this.animateTodayButton(date);\n      });\n    };\n\n    setDate(this.props, date, this.state.date, updateState, updateSource);\n  };\n\n  setDisabled = disabled => {\n    const {setDisabled} = this.presenter;\n    const {showTodayButton} = this.props;\n\n    const updateState = disabled => {\n      this.setState({disabled});\n      this.animateOpacity(disabled);\n    };\n\n    setDisabled(showTodayButton, disabled, this.state.disabled, updateState);\n  };\n\n  animateTodayButton(date) {\n    const {shouldAnimateTodayButton, getPositionAnimation} = this.presenter;\n\n    if (shouldAnimateTodayButton(this.props)) {\n      const animationData = getPositionAnimation(date, this.props.todayBottomMargin);\n\n      Animated.spring(this.state.buttonY, {\n        ...animationData\n      }).start();\n    }\n  }\n\n  animateOpacity(disabled) {\n    const {shouldAnimateOpacity, getOpacityAnimation} = this.presenter;\n\n    if (shouldAnimateOpacity(this.props)) {\n      const animationData = getOpacityAnimation(this.props, disabled);\n\n      Animated.timing(this.state.opacity, {\n        ...animationData\n      }).start();\n    }\n  }\n\n  onTodayPress = () => {\n    const today = this.presenter.getTodayDate();\n    this.setDate(today, UPDATE_SOURCES.TODAY_PRESS);\n  };\n\n  renderTodayButton() {\n    const {disabled, opacity, buttonY, buttonIcon} = this.state;\n    const {getTodayFormatted} = this.presenter;\n    const today = getTodayFormatted();\n\n    return (\n      <Animated.View style={[this.style.todayButtonContainer, {transform: [{translateY: buttonY}]}]}>\n        <TouchableOpacity\n          style={[this.style.todayButton, this.props.todayButtonStyle]}\n          onPress={this.onTodayPress}\n          disabled={disabled}\n        >\n          <Animated.Image style={[this.style.todayButtonImage, {opacity}]} source={buttonIcon} />\n          <Animated.Text allowFontScaling={false} style={[this.style.todayButtonText, {opacity}]}>\n            {today}\n          </Animated.Text>\n        </TouchableOpacity>\n      </Animated.View>\n    );\n  }\n\n  render() {\n    return (\n      <CalendarContext.Provider value={this.getProviderContextValue()}>\n        <View style={[styles.container, this.props.style]}>{this.props.children}</View>\n        {this.props.showTodayButton && this.renderTodayButton()}\n      </CalendarContext.Provider>\n    );\n  }\n}\n\nexport default CalendarProvider;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\n"]},"metadata":{},"sourceType":"module"}