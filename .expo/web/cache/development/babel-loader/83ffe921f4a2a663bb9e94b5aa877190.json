{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\NASSER\\\\Desktop\\\\efficiently\\\\app\\\\node_modules\\\\react-native-calendars\\\\src\\\\expandableCalendar\\\\WeekCalendar\\\\index.js\";\nvar _excluded = [\"style\", \"onDayPress\", \"markedDates\", \"firstDay\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport memoize from 'memoize-one';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Map } from 'immutable';\nimport { extractComponentProps } from \"../../component-updater\";\nimport { weekDayNames } from \"../../dateutils\";\nimport { toMarkingFormat } from \"../../interface\";\nimport styleConstructor from \"../style\";\nimport asCalendarConsumer from \"../asCalendarConsumer\";\nimport CalendarList from \"../../calendar-list\";\nimport Week from \"../week\";\nimport Presenter from \"./presenter\";\n\nvar commons = require(\"../commons\");\n\nvar NUMBER_OF_PAGES = 2;\nvar applyAndroidRtlFix = commons.isAndroid && commons.isRTL;\n\nvar WeekCalendar = function (_Component) {\n  _inherits(WeekCalendar, _Component);\n\n  var _super = _createSuper(WeekCalendar);\n\n  function WeekCalendar(props) {\n    var _this;\n\n    _classCallCheck(this, WeekCalendar);\n\n    _this = _super.call(this, props);\n    _this.getWeekStyle = memoize(function (width, style) {\n      return [{\n        width: width\n      }, style];\n    });\n\n    _this.onDayPress = function (value) {\n      _this.presenter.onDayPressed(_this.props.context, value);\n    };\n\n    _this.onScroll = function (_ref) {\n      var x = _ref.nativeEvent.contentOffset.x;\n      var onScroll = _this.presenter.onScroll;\n      var context = _this.props.context;\n      var items = _this.state.items;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          containerWidth = _assertThisInitialize.containerWidth,\n          page = _assertThisInitialize.page;\n\n      var updateState = function updateState(newData, newPage) {\n        _this.page = newPage;\n\n        _this.setState({\n          items: _toConsumableArray(newData)\n        });\n      };\n\n      onScroll({\n        context: context,\n        updateState: updateState,\n        x: x,\n        page: page,\n        items: items,\n        width: containerWidth\n      });\n    };\n\n    _this.onMomentumScrollEnd = function () {\n      var items = _this.state.items;\n      var onMomentumScrollEnd = _this.presenter.onMomentumScrollEnd;\n\n      var updateItems = function updateItems(items) {\n        setTimeout(function () {\n          _this.setState({\n            items: _toConsumableArray(items)\n          });\n        }, 100);\n      };\n\n      onMomentumScrollEnd({\n        items: items,\n        props: _this.props,\n        page: _this.page,\n        updateItems: updateItems\n      });\n    };\n\n    _this.renderItem = function (_ref2) {\n      var item = _ref2.item;\n\n      var _extractComponentProp = extractComponentProps(Week, _this.props),\n          style = _extractComponentProp.style,\n          onDayPress = _extractComponentProp.onDayPress,\n          markedDates = _extractComponentProp.markedDates,\n          firstDay = _extractComponentProp.firstDay,\n          others = _objectWithoutProperties(_extractComponentProp, _excluded);\n\n      var context = _this.props.context;\n\n      var isSameWeek = _this.presenter.isSameWeek(item, context.date, firstDay);\n\n      var currentContext = isSameWeek ? context : undefined;\n      return React.createElement(Week, _extends({}, others, {\n        key: item,\n        current: item,\n        firstDay: firstDay,\n        style: _this.getWeekStyle(_this.containerWidth, style),\n        markedDates: markedDates,\n        onDayPress: onDayPress || _this.onDayPress,\n        context: currentContext,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }\n      }));\n    };\n\n    _this.getItemLayout = function (data, index) {\n      return {\n        length: _this.containerWidth,\n        offset: _this.containerWidth * index,\n        index: index\n      };\n    };\n\n    _this.keyExtractor = function (item, index) {\n      return index.toString();\n    };\n\n    _this.renderWeekDaysNames = memoize(function (weekDaysNames) {\n      return weekDaysNames.map(function (day, idx) {\n        return React.createElement(Text, {\n          allowFontScaling: false,\n          key: idx,\n          style: _this.style.dayHeader,\n          numberOfLines: 1,\n          accessibilityLabel: '',\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 7\n          }\n        }, day);\n      });\n    });\n    _this.style = styleConstructor(props.theme);\n    _this.presenter = new Presenter(props);\n    _this.list = React.createRef();\n    _this.page = NUMBER_OF_PAGES;\n    _this.firstAndroidRTLScrollIgnored = !applyAndroidRtlFix;\n    _this.state = {\n      items: _this.presenter.getDatesArray(_this.props)\n    };\n    return _this;\n  }\n\n  _createClass(WeekCalendar, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var context = this.props.context;\n      var _this$presenter = this.presenter,\n          shouldComponentUpdate = _this$presenter.shouldComponentUpdate,\n          getDatesArray = _this$presenter.getDatesArray,\n          scrollToIndex = _this$presenter.scrollToIndex;\n\n      if (shouldComponentUpdate(context, prevProps.context)) {\n        this.setState({\n          items: getDatesArray(this.props)\n        });\n        scrollToIndex(false);\n      }\n    }\n  }, {\n    key: \"containerWidth\",\n    get: function get() {\n      return this.props.calendarWidth || commons.screenWidth;\n    }\n  }, {\n    key: \"getDatesArray\",\n    value: function getDatesArray() {\n      var array = [];\n\n      for (var index = -NUMBER_OF_PAGES; index <= NUMBER_OF_PAGES; index++) {\n        var d = this.getDate(index);\n        array.push(d);\n      }\n\n      return array;\n    }\n  }, {\n    key: \"getDate\",\n    value: function getDate(weekIndex) {\n      var _this$props = this.props,\n          current = _this$props.current,\n          context = _this$props.context,\n          firstDay = _this$props.firstDay;\n      var d = XDate(current || context.date);\n      var dayOfTheWeek = d.getDay();\n\n      if (dayOfTheWeek < firstDay && firstDay > 0) {\n        dayOfTheWeek = 7 + dayOfTheWeek;\n      }\n\n      var dd = weekIndex === 0 ? d : d.addDays(firstDay - dayOfTheWeek);\n      var newDate = dd.addWeeks(weekIndex);\n      return toMarkingFormat(newDate);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          allowShadow = _this$props2.allowShadow,\n          firstDay = _this$props2.firstDay,\n          hideDayNames = _this$props2.hideDayNames,\n          current = _this$props2.current,\n          context = _this$props2.context;\n      var items = this.state.items;\n      var weekDaysNames = weekDayNames(firstDay);\n      var extraData = Map({\n        current: current,\n        date: context.date,\n        firstDay: firstDay\n      });\n      return React.createElement(View, {\n        testID: this.props.testID,\n        style: [allowShadow && this.style.containerShadow, !hideDayNames && this.style.containerWrapper],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 7\n        }\n      }, !hideDayNames && React.createElement(View, {\n        style: [this.style.week, this.style.weekCalendar],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }\n      }, this.renderWeekDaysNames(weekDaysNames)), React.createElement(FlatList, {\n        ref: this.presenter.list,\n        data: items,\n        extraData: extraData,\n        style: this.style.container,\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        pagingEnabled: true,\n        scrollEnabled: true,\n        renderItem: this.renderItem,\n        keyExtractor: this.keyExtractor,\n        initialScrollIndex: NUMBER_OF_PAGES,\n        getItemLayout: this.getItemLayout,\n        onScroll: this.onScroll,\n        onMomentumScrollEnd: this.onMomentumScrollEnd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return WeekCalendar;\n}(Component);\n\nWeekCalendar.displayName = 'WeekCalendar';\nWeekCalendar.propTypes = _objectSpread(_objectSpread({}, CalendarList.propTypes), {}, {\n  current: PropTypes.any,\n  allowShadow: PropTypes.bool,\n  hideDayNames: PropTypes.bool\n});\nWeekCalendar.defaultProps = {\n  firstDay: 0,\n  allowShadow: true\n};\nexport default asCalendarConsumer(WeekCalendar);","map":{"version":3,"sources":["C:/Users/NASSER/Desktop/efficiently/app/node_modules/react-native-calendars/src/expandableCalendar/WeekCalendar/index.js"],"names":["memoize","PropTypes","XDate","React","Component","Map","extractComponentProps","weekDayNames","toMarkingFormat","styleConstructor","asCalendarConsumer","CalendarList","Week","Presenter","commons","require","NUMBER_OF_PAGES","applyAndroidRtlFix","isAndroid","isRTL","WeekCalendar","props","getWeekStyle","width","style","onDayPress","value","presenter","onDayPressed","context","onScroll","x","nativeEvent","contentOffset","items","state","containerWidth","page","updateState","newData","newPage","setState","onMomentumScrollEnd","updateItems","setTimeout","renderItem","item","markedDates","firstDay","others","isSameWeek","date","currentContext","undefined","getItemLayout","data","index","length","offset","keyExtractor","toString","renderWeekDaysNames","weekDaysNames","map","day","idx","dayHeader","theme","list","createRef","firstAndroidRTLScrollIgnored","getDatesArray","prevProps","shouldComponentUpdate","scrollToIndex","calendarWidth","screenWidth","array","d","getDate","push","weekIndex","current","dayOfTheWeek","getDay","dd","addDays","newDate","addWeeks","allowShadow","hideDayNames","extraData","testID","containerShadow","containerWrapper","week","weekCalendar","container","displayName","propTypes","any","bool","defaultProps"],"mappings":"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","sourcesContent":["import memoize from 'memoize-one';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\n\nimport React, {Component} from 'react';\nimport {FlatList, View, Text} from 'react-native';\nimport {Map} from 'immutable';\n\nimport {extractComponentProps} from '../../component-updater';\nimport {weekDayNames} from '../../dateutils';\nimport {toMarkingFormat} from '../../interface';\nimport styleConstructor from '../style';\nimport asCalendarConsumer from '../asCalendarConsumer';\nimport CalendarList from '../../calendar-list';\nimport Week from '../week';\nimport Presenter from './presenter';\n\nconst commons = require('../commons');\nconst NUMBER_OF_PAGES = 2; // must be a positive number\nconst applyAndroidRtlFix = commons.isAndroid && commons.isRTL;\n\n/**\n * @description: Week calendar component\n * @note: Should be wrapped with 'CalendarProvider'\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/expandableCalendar.js\n */\nclass WeekCalendar extends Component {\n  static displayName = 'WeekCalendar';\n\n  static propTypes = {\n    ...CalendarList.propTypes,\n    /** the current date */\n    current: PropTypes.any,\n    /** whether to have shadow/elevation for the calendar */\n    allowShadow: PropTypes.bool,\n    /** whether to hide the names of the week days */\n    hideDayNames: PropTypes.bool\n  };\n\n  static defaultProps = {\n    firstDay: 0,\n    allowShadow: true\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.style = styleConstructor(props.theme);\n\n    this.presenter = new Presenter(props);\n    this.list = React.createRef();\n    this.page = NUMBER_OF_PAGES;\n    // On Android+RTL there's an initial scroll that cause issues\n    this.firstAndroidRTLScrollIgnored = !applyAndroidRtlFix;\n\n    this.state = {\n      items: this.presenter.getDatesArray(this.props)\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {context} = this.props;\n    const {shouldComponentUpdate, getDatesArray, scrollToIndex} = this.presenter;\n\n    if (shouldComponentUpdate(context, prevProps.context)) {\n      this.setState({items: getDatesArray(this.props)});\n      scrollToIndex(false);\n    }\n  }\n\n  get containerWidth() {\n    return this.props.calendarWidth || commons.screenWidth;\n  }\n\n  getDatesArray() {\n    const array = [];\n    for (let index = -NUMBER_OF_PAGES; index <= NUMBER_OF_PAGES; index++) {\n      const d = this.getDate(index);\n      array.push(d);\n    }\n    return array;\n  }\n\n  getDate(weekIndex) {\n    const {current, context, firstDay} = this.props;\n    const d = XDate(current || context.date);\n    // get the first day of the week as date (for the on scroll mark)\n    let dayOfTheWeek = d.getDay();\n    if (dayOfTheWeek < firstDay && firstDay > 0) {\n      dayOfTheWeek = 7 + dayOfTheWeek;\n    }\n\n    // leave the current date in the visible week as is\n    const dd = weekIndex === 0 ? d : d.addDays(firstDay - dayOfTheWeek);\n    const newDate = dd.addWeeks(weekIndex);\n    return toMarkingFormat(newDate);\n  }\n\n  getWeekStyle = memoize((width, style) => {\n    return [{width}, style];\n  });\n\n  onDayPress = value => {\n    this.presenter.onDayPressed(this.props.context, value);\n  };\n\n  onScroll = ({\n    nativeEvent: {\n      contentOffset: {x}\n    }\n  }) => {\n    const {onScroll} = this.presenter;\n    const {context} = this.props;\n    const {items} = this.state;\n    const {containerWidth, page} = this;\n\n    const updateState = (newData, newPage) => {\n      this.page = newPage;\n      this.setState({items: [...newData]});\n    };\n\n    onScroll({context, updateState, x, page, items, width: containerWidth});\n  };\n\n  onMomentumScrollEnd = () => {\n    const {items} = this.state;\n    const {onMomentumScrollEnd} = this.presenter;\n\n    const updateItems = items => {\n      setTimeout(() => {\n        this.setState({items: [...items]});\n      }, 100);\n    };\n\n    onMomentumScrollEnd({items, props: this.props, page: this.page, updateItems});\n  };\n\n  renderItem = ({item}) => {\n    const {style, onDayPress, markedDates, firstDay, ...others} = extractComponentProps(Week, this.props);\n    const {context} = this.props;\n\n    const isSameWeek = this.presenter.isSameWeek(item, context.date, firstDay);\n    const currentContext = isSameWeek ? context : undefined;\n\n    return (\n      <Week\n        {...others}\n        key={item}\n        current={item}\n        firstDay={firstDay}\n        style={this.getWeekStyle(this.containerWidth, style)}\n        markedDates={markedDates}\n        onDayPress={onDayPress || this.onDayPress}\n        context={currentContext}\n      />\n    );\n  };\n\n  getItemLayout = (data, index) => {\n    return {\n      length: this.containerWidth,\n      offset: this.containerWidth * index,\n      index\n    };\n  };\n\n  keyExtractor = (item, index) => index.toString();\n\n  renderWeekDaysNames = memoize(weekDaysNames => {\n    return weekDaysNames.map((day, idx) => (\n      <Text\n        allowFontScaling={false}\n        key={idx}\n        style={this.style.dayHeader}\n        numberOfLines={1}\n        accessibilityLabel={''}\n        // accessible={false} // not working\n        // importantForAccessibility='no'\n      >\n        {day}\n      </Text>\n    ));\n  });\n\n  render() {\n    const {allowShadow, firstDay, hideDayNames, current, context} = this.props;\n    const {items} = this.state;\n    const weekDaysNames = weekDayNames(firstDay);\n    const extraData = Map({\n      current,\n      date: context.date,\n      firstDay\n    });\n\n    return (\n      <View\n        testID={this.props.testID}\n        style={[allowShadow && this.style.containerShadow, !hideDayNames && this.style.containerWrapper]}\n      >\n        {!hideDayNames && (\n          <View style={[this.style.week, this.style.weekCalendar]}>\n            {/* {this.props.weekNumbers && <Text allowFontScaling={false} style={this.style.dayHeader}></Text>} */}\n            {this.renderWeekDaysNames(weekDaysNames)}\n          </View>\n        )}\n        <FlatList\n          ref={this.presenter.list}\n          data={items}\n          extraData={extraData}\n          style={this.style.container}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          pagingEnabled\n          scrollEnabled\n          renderItem={this.renderItem}\n          keyExtractor={this.keyExtractor}\n          initialScrollIndex={NUMBER_OF_PAGES}\n          getItemLayout={this.getItemLayout}\n          onScroll={this.onScroll}\n          onMomentumScrollEnd={this.onMomentumScrollEnd}\n        />\n      </View>\n    );\n  }\n}\n\nexport default asCalendarConsumer(WeekCalendar);\n"]},"metadata":{},"sourceType":"module"}